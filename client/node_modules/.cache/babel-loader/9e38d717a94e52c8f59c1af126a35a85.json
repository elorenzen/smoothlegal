{"ast":null,"code":"var _jsxFileName = \"/Users/ericlorenzen/smoothlegal/smoothlegal/client/src/components/InfoContainer.js\";\nimport React from 'react';\nimport { Layout, Input, Button, Form, Select } from 'element-react/next';\nlet index;\n\nconst axios = require('axios'); // Config for Axios\n\n\nconst config = {\n  headers: {\n    'content-type': 'application/json'\n  }\n};\n\nclass InfoContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: 0,\n      stateOfIncoporation: 'Delaware',\n      type: 'LLC',\n      companyName: '',\n      altNames: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNum: '',\n      streetAddress: '',\n      streetAddressTwo: '',\n      city: '',\n      usState: [],\n\n      /*\n      usStates: [\n        { value: 'AL'\n        }, {\n          value: 'AK'\n        }, {\n          value: 'AZ'\n        }, {\n          value: 'AR'\n        }, {\n          value: 'CA'\n        }, {\n          value: 'CO'\n        }, {\n          value: 'CT'\n        }, {\n          value: 'DE'\n        }, {\n          value: 'DC'\n        }, {\n          value: 'FL'\n        }, {\n          value: 'GA'\n        }, {\n          value: 'HI'\n        }, {\n          value: 'ID'\n        }, {\n          value: 'IL'\n        }, {\n          value: 'IN'\n        }, {\n          value: 'IA'\n        }, {\n          value: 'KS'\n        }, {\n          value: 'KY'\n        }, {\n          value: 'LA'\n        }, {\n          value: 'ME'\n        }, {\n          value: 'MD'\n        }, {\n          value: 'MA'\n        }, {\n          value: 'MI'\n        }, {\n          value: 'MN'\n        }, {\n          value: 'MS'\n        }, {\n          value: 'MO'\n        }, {\n          value: 'MT'\n        }, {\n          value: 'NE'\n        }, {\n          value: 'NV'\n        }, {\n          value: 'NH'\n        }, {\n          value: 'NJ'\n        }, {\n          value: 'NM'\n        }, {\n          value: 'NY'\n        }, {\n          value: 'NC'\n        }, {\n          value: 'ND'\n        }, {\n          value: 'OH'\n        }, {\n          value: 'OK'\n        }, {\n          value: 'OR'\n        }, {\n          value: 'PA'\n        }, {\n          value: 'RI'\n        }, {\n          value: 'SC'\n        }, {\n          value: 'SD'\n        }, {\n          value: 'TN'\n        }, {\n          value: 'TX'\n        }, {\n          value: 'UT'\n        }, {\n          value: 'VT'\n        }, {\n          value: 'VA'\n        }, {\n          value: 'WA'\n        }, {\n          value: 'WV'\n        }, {\n          value: 'WI'\n        }, {\n          value: 'WY'\n        }\n      ],\n      */\n      zip: '',\n      countries: [{\n        value: 'United States of America',\n        label: 'USA'\n      }],\n      memberName: '',\n      addlMemberNames: ''\n    };\n\n    this.onStatesSelect = event => {\n      for (index = 0; index < this.state.usStates.length; index++) {\n        index = this.state.usStates[index];\n      }\n\n      this.setState({\n        usStates: event.value.target.value\n      });\n    };\n  }\n\n  onNameInput(companyName) {\n    this.setState({\n      companyName\n    });\n  }\n\n  onAltNameInput(altNames) {\n    this.setState({\n      altNames\n    });\n  }\n\n  onFirstNameInput(firstName) {\n    this.setState({\n      firstName\n    });\n  }\n\n  onLastNameInput(lastName) {\n    this.setState({\n      lastName\n    });\n  }\n\n  onEmailInput(email) {\n    this.setState({\n      email\n    });\n  }\n\n  onPhoneNumInput(phoneNum) {\n    this.setState({\n      phoneNum\n    });\n  }\n\n  onStreetInput(streetAddress) {\n    this.setState({\n      streetAddress\n    });\n  }\n\n  onStreetTwoInput(streetAddressTwo) {\n    this.setState({\n      streetAddressTwo\n    });\n  }\n\n  onCityInput(city) {\n    this.setState({\n      city\n    });\n  }\n\n  onZipInput(zip) {\n    this.setState({\n      zip\n    });\n  }\n\n  onMemberInput(memberName) {\n    this.setState({\n      memberName\n    });\n  }\n\n  onAddlMemberInput(addlMemberNames) {\n    this.setState({\n      addlMemberNames\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    alert(\"\\n            The name '\".concat(this.state.companyName, \"' was submitted. \\n            The alternate name '\").concat(this.state.altNames, \"' was submitted.\\n            The first name for order delivery is '\").concat(this.state.firstName, \"'.\\n            The last name for order delivery is '\").concat(this.state.lastName, \"'.\\n            The email address is '\").concat(this.state.email, \"'.\\n            The phone number is \").concat(this.state.phoneNum, \".\\n            The address is \").concat(this.state.streetAddressTwo, \" \").concat(this.state.streetAddress, \" \").concat(this.state.city, \", \\n            \").concat(this.state.usStates[4].value, \" \").concat(this.state.zip, \".\\n            LLC members include: \").concat(this.state.memberName, \" \").concat(this.state.addlMemberNames, \".\\n        \"));\n    this.props.saveAndNext(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.props.active), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.props.companyName), React.createElement(Form, {\n      labelWidth: \"100\",\n      className: \"demo-dynamic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"State of Incorporation\"), React.createElement(Input, {\n      disabled: true,\n      placeholder: \"Delaware\",\n      value: this.state.stateOfIncoporation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Type\"), React.createElement(Input, {\n      disabled: true,\n      placeholder: \"LLC\",\n      value: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.companyName,\n      onChange: this.onNameInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Alternative name(s)\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.altNames,\n      onChange: this.onAltNameInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Order Delivery\"), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"First name\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.firstName,\n      onChange: this.onFirstNameInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.lastName,\n      onChange: this.onLastNameInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Input, {\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.onEmailInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.phoneNum,\n      onChange: this.onPhoneNumInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Street address\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.streetAddress,\n      onChange: this.onStreetInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Street address continued\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.streetAddressTwo,\n      onChange: this.onStreetTwoInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"City\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.onCityInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"State\"), React.createElement(Select, {\n      value: this.state.usState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Select.Option, {\n      value: \"AL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"AL\"), React.createElement(Select.Option, {\n      value: \"AR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"AR\"), React.createElement(Select.Option, {\n      value: \"AZ\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"AZ\")))), React.createElement(Layout.Col, {\n      span: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Zip Code\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.zip,\n      onChange: this.onZipInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Select, {\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \" \", this.state.countries.map(country => {\n      return React.createElement(Select.Option, {\n        key: country.value,\n        label: country.label,\n        value: country.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      });\n    }), \" \")))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Members\"), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.memberName,\n      onChange: this.onMemberInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Additional members(if applicable)\"), React.createElement(Input, {\n      type: \"text\",\n      value: this.state.addlMemberNames,\n      onChange: this.onAddlMemberInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }))))), React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"Next step\"));\n  }\n\n}\n\nexport default InfoContainer;\n/*\nthis.state = {\n    labelPosition: 'top',\n    form: {\n        altnames: [{\n            key: 1,\n            value: ''\n        }],\n        members: [{\n            key: 1,\n            value: ''\n        }],\n        states: [],\n        country: [{\n          value: 'USA',\n          label: 'United States of America'\n        }],\n    },\n    value: ''\n};\nhandleSubmit(e) {\ne.preventDefault();\n   this.refs.form.validate((valid) => {\n    if (valid) {\n        alert('submit!');\n    } else {\n        console.log('error submit!!');\n        return false;\n    }\n});\n}\nremoveAltName(item, e) {\nvar index = this.state.form.altnames.indexOf(item);\n   if (index !== -1) {\n    this.state.form.altnames.splice(index, 1);\n    this.forceUpdate();\n}\n   e.preventDefault();\n}\nremoveMember(item, event) {\nlet index = this.state.form.members.indexOf(item);\n if(index !== -1 ) {\n    this.state.form.members.splice(index, 1);\n    this.forceUpdate();\n}\n event.preventDefault();\n}\naddAltName(e) {\ne.preventDefault();\n   this.state.form.altnames.push({\n    key: this.state.form.altnames.length,\n    value: ''\n});\n   this.forceUpdate();\n}\naddMember(event) {\nevent.preventDefault();\n this.state.form.members.push({\n    key: this.state.form.members.length,\n    value: ''\n});\n}\nonAltNameChange(index, value) {\nthis.state.form.altnames[index].value = value;\n//this.setState({ value: this.state.form.altnames[index].value })\nthis.forceUpdate();\n}\nonMemberChange(index, value) {\nthis.state.form.members[index].value = value;\n//this.setState({ value: this.state.form.members[index].value });\n}\n*/\n\n/*\nrender() {\n    const activeName = \"1\";\n    return (\n        <Collapse value={activeName} accordion>\n            <Collapse.Item title=\"Company\" name=\"1\">\n                <Form ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"100\" className=\"demo-dynamic\"> \n                    <Form.Item>\n                        <div>State</div>\n                        <Input disabled placeholder=\"Delaware\" value=\"Delaware\" />\n                    </Form.Item>\n                    <Form.Item>\n                        <div>Type</div>\n                        <Input disabled placeholder=\"LLC\" value=\"LLC\" />\n                    </Form.Item>\n                    <Form.Item\n                        label={`Company name`}\n                        rules={{\n                            type: 'object', required: true,\n                            fields: {\n                                value: { \n                                    required: true, \n                                    message: 'You must name your LLC', \n                                    trigger: 'blur' \n                                }\n                            }\n                        }}>\n                        <Input />\n                    </Form.Item>\n                    {\n                        this.state.form.altnames.map((altname, index) => {\n                            return (\n                                <Form.Item\n                                    key={index}\n                                    label={`Alternative name ${index + 1}`}\n                                    prop={`altnames:${index}`}\n                                    rules={{\n                                        type: 'object', required: true,\n                                        fields: {\n                                            value: { \n                                                required: true, \n                                                message: 'You must add at least one alternate name', \n                                                trigger: 'blur' \n                                            }\n                                        }\n                                    }}\n                                >\n                                    <Input \n                                        value={altname.value} \n                                        onChange={this.onAltNameChange.bind(this, index)}>\n                                    </Input>\n                                    <Button \n                                        onClick={this.removeAltName.bind(this, altname)}>\n                                        Delete\n                                    </Button>\n                                </Form.Item>\n                            )\n                        })\n                    }\n                    <Form.Item>\n                        <Button \n                            type=\"primary\" \n                            onClick={this.handleSubmit.bind(this)}>\n                            Submit\n                        </Button>\n                        <Button \n                            onClick={this.addAltName.bind(this)}>\n                            New name\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Collapse.Item>\n            <Collapse.Item title=\"Contact\" name=\"2\">\n                <Form>\n                    <Layout.Row>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input \n                                    placeholder=\"First name\" prepend={\n                                        <Select value=\"\" placeholder=\"Select\"> {\n                                            [\n                                                'Mr.', \n                                                'Ms.', \n                                                'Mrs.',\n                                                'Dr.',\n                                                'Prof.'\n                                            ].map((item, index) => \n                                                <Select.Option \n                                                    key={index} \n                                                    label={item} \n                                                    value={index} \n                                                />\n                                            )\n                                        }\n                                        </Select>\n                                    } \n                                />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input placeholder='Last name' gutter=\"20\" />\n                            </Form.Item>                                     \n                        </Layout.Col>\n                    </Layout.Row>\n                    <Layout.Row>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='email' placeholder=\"Email address\" append={\n                                    <Select value=''> {\n                                        [\n                                            \".com\",\n                                            \".net\",\n                                            \".edu\",\n                                            \".gov\"\n                                        ].map((item, index) => \n                                            <Select.Option \n                                                key={index} \n                                                label={item} \n                                                value={index} \n                                            />\n                                        )\n                                    } </Select>\n                                } />\n                            </Form.Item>           \n                        </Layout.Col> \n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='number' placeholder=\"Phone number\" />\n                            </Form.Item>                      \n                        </Layout.Col>               \n                    </Layout.Row>\n                    <Layout.Row>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='text' placeholder=\"Street Address\" />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='text' placeholder=\"Street Address continued\" />\n                            </Form.Item>\n                        </Layout.Col>\n                    </Layout.Row>\n                    <Layout.Row>\n                        <Layout.Col span='11'>\n                            <Form.Item>\n                                <Input type='text' placeholder=\"City\" />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='5'>\n                            <Form.Item>\n                                <Select value={this.state.value}> {\n                                    this.state.form.states.map(el => {\n                                        return  <Select.Option \n                                                    key={el.value} \n                                                    label={el.label} \n                                                    value={el.value} \n                                                />\n                                    })\n                                } </Select>\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span=\"8\">\n                            <Form.Item>\n                                <Input placeholder=\"Zip Code\" />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='24'>\n                            <Form.Item>\n                                <Select value={ this.state.value }> {\n                                    this.state.form.country.map(item => {\n                                        return  <Select.Option\n                                                    key={item.value}\n                                                    label={item.label}\n                                                    value={item.label}\n                                                />\n                                    })\n                                } </Select>\n                            </Form.Item>\n                        </Layout.Col>\n                    </Layout.Row>\n                </Form>\n            </Collapse.Item>\n            <Collapse.Item title=\"Legal Parties\" name=\"3\">\n                <Form ref=\"form\" model={this.state.form} rules={this.state.rules}>\n                    {\n                        this.state.form.members.map((member, index) => {\n                            return (\n                                <Form.Item\n                                    key={index}\n                                    label={`Member name ${index + 1}`}\n                              \n                                    rules={{\n                                        type: 'object', required: true,\n                                        fields: {\n                                            value: { \n                                                required: true, \n                                                message: 'You must add at least one member', \n                                                trigger: 'blur' \n                                            }\n                                        }\n                                    }}\n                                >\n                                    <Input \n                                        value={member.value} \n                                        onChange={this.onMemberChange.bind(this, index)}>\n                                    </Input>\n                                    <Button \n                                        onClick={this.removeMember.bind(this, member)}>\n                                        Delete\n                                    </Button>\n                                </Form.Item>\n                            )\n                        })\n                    }\n                    <Form.Item>\n                        <Button \n                            type=\"primary\" \n                            onClick={this.handleSubmit.bind(this)}>\n                            Submit\n                        </Button>\n                        <Button \n                            onClick={this.addMember.bind(this)}>\n                            New name\n                        </Button>\n                    </Form.Item>                \n                </Form>\n            </Collapse.Item>\n        </Collapse>\n    )\n}\n*/","map":{"version":3,"sources":["/Users/ericlorenzen/smoothlegal/smoothlegal/client/src/components/InfoContainer.js"],"names":["React","Layout","Input","Button","Form","Select","index","axios","require","config","headers","InfoContainer","Component","state","active","stateOfIncoporation","type","companyName","altNames","firstName","lastName","email","phoneNum","streetAddress","streetAddressTwo","city","usState","zip","countries","value","label","memberName","addlMemberNames","onStatesSelect","event","usStates","length","setState","target","onNameInput","onAltNameInput","onFirstNameInput","onLastNameInput","onEmailInput","onPhoneNumInput","onStreetInput","onStreetTwoInput","onCityInput","onZipInput","onMemberInput","onAddlMemberInput","handleSubmit","preventDefault","alert","props","saveAndNext","render","bind","map","country"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  { \n            Layout, \n            Input,\n            Button,\n            Form, \n            Select\n        } from 'element-react/next';\n\nlet index;\nconst axios = require('axios');\n\n// Config for Axios\nconst config = {     \n    headers: { 'content-type': 'application/json' }\n}\n\nclass InfoContainer extends React.Component {\n    \n    state = {\n        active: 0,\n        stateOfIncoporation: 'Delaware',\n        type: 'LLC',\n        companyName: '',\n        altNames: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNum: '',\n        streetAddress: '',\n        streetAddressTwo: '',\n        city: '',\n        usState: [],\n        /*\n        usStates: [\n          { value: 'AL'\n          }, {\n            value: 'AK'\n          }, {\n            value: 'AZ'\n          }, {\n            value: 'AR'\n          }, {\n            value: 'CA'\n          }, {\n            value: 'CO'\n          }, {\n            value: 'CT'\n          }, {\n            value: 'DE'\n          }, {\n            value: 'DC'\n          }, {\n            value: 'FL'\n          }, {\n            value: 'GA'\n          }, {\n            value: 'HI'\n          }, {\n            value: 'ID'\n          }, {\n            value: 'IL'\n          }, {\n            value: 'IN'\n          }, {\n            value: 'IA'\n          }, {\n            value: 'KS'\n          }, {\n            value: 'KY'\n          }, {\n            value: 'LA'\n          }, {\n            value: 'ME'\n          }, {\n            value: 'MD'\n          }, {\n            value: 'MA'\n          }, {\n            value: 'MI'\n          }, {\n            value: 'MN'\n          }, {\n            value: 'MS'\n          }, {\n            value: 'MO'\n          }, {\n            value: 'MT'\n          }, {\n            value: 'NE'\n          }, {\n            value: 'NV'\n          }, {\n            value: 'NH'\n          }, {\n            value: 'NJ'\n          }, {\n            value: 'NM'\n          }, {\n            value: 'NY'\n          }, {\n            value: 'NC'\n          }, {\n            value: 'ND'\n          }, {\n            value: 'OH'\n          }, {\n            value: 'OK'\n          }, {\n            value: 'OR'\n          }, {\n            value: 'PA'\n          }, {\n            value: 'RI'\n          }, {\n            value: 'SC'\n          }, {\n            value: 'SD'\n          }, {\n            value: 'TN'\n          }, {\n            value: 'TX'\n          }, {\n            value: 'UT'\n          }, {\n            value: 'VT'\n          }, {\n            value: 'VA'\n          }, {\n            value: 'WA'\n          }, {\n            value: 'WV'\n          }, {\n            value: 'WI'\n          }, {\n            value: 'WY'\n          }\n        ],\n        */\n        zip: '',\n        countries: [\n          { value: 'United States of America', label: 'USA' }\n        ],\n        memberName: '',\n        addlMemberNames: ''\n    }\n\n    onNameInput(companyName) {\n        this.setState({ companyName });\n    }\n\n    onAltNameInput(altNames) {\n        this.setState({ altNames });\n    }\n\n    onFirstNameInput(firstName) {\n        this.setState({ firstName });\n    }\n\n    onLastNameInput(lastName) {\n        this.setState({ lastName });\n    }\n\n    onEmailInput(email) {\n        this.setState({ email });\n    }\n\n    onPhoneNumInput(phoneNum) {\n        this.setState({ phoneNum });\n    }\n\n    onStreetInput(streetAddress) {\n        this.setState({ streetAddress })\n    }\n\n    onStreetTwoInput(streetAddressTwo) {\n        this.setState({ streetAddressTwo })\n    }\n\n    onCityInput(city) {\n        this.setState({ city });\n    }\n\n    onStatesSelect = (event) => {\n\n        for(index = 0; index < this.state.usStates.length; index++ ) {\n            index = this.state.usStates[index];\n        }\n\n        this.setState({ usStates: event.value.target.value })\n    }\n\n    onZipInput(zip) {\n        this.setState({ zip });\n    }\n\n    onMemberInput(memberName) {\n        this.setState({ memberName });\n    }\n\n    onAddlMemberInput(addlMemberNames) {\n        this.setState({ addlMemberNames });\n    }\n\n    handleSubmit(event) {\n    \n        event.preventDefault();\n\n        alert(`\n            The name '${this.state.companyName}' was submitted. \n            The alternate name '${this.state.altNames}' was submitted.\n            The first name for order delivery is '${this.state.firstName}'.\n            The last name for order delivery is '${this.state.lastName}'.\n            The email address is '${this.state.email}'.\n            The phone number is ${this.state.phoneNum}.\n            The address is ${this.state.streetAddressTwo} ${this.state.streetAddress} ${this.state.city}, \n            ${this.state.usStates[4].value} ${this.state.zip}.\n            LLC members include: ${this.state.memberName} ${this.state.addlMemberNames}.\n        `);\n         \n        this.props.saveAndNext(this.state);\n        \n    };\n    \n    render(){\n        return (\n            <div>\n                <div>{this.props.active}</div>\n                <div>{this.props.companyName}</div>\n\n                <Form labelWidth=\"100\" className=\"demo-dynamic\">\n \n                {/*\n                    <Collapse>\n                        <Collapse.Item title=\"Company\" name=\"1\">\n                */}\n                            <Layout.Row>\n                                <Layout.Col span=\"12\">\n                                    <Form.Item>\n                                        <div>State of Incorporation</div>\n                                        <Input disabled placeholder=\"Delaware\" value={this.state.stateOfIncoporation} />\n                                    </Form.Item>\n                                </Layout.Col>\n                                <Layout.Col span=\"12\">\n                                    <Form.Item>\n                                        <div>Type</div>\n                                        <Input disabled placeholder=\"LLC\" value={this.state.type} />\n                                    </Form.Item>\n                                </Layout.Col>  \n                            </Layout.Row>\n                            <Layout.Row>\n                                <Layout.Col span='12'>\n                                    <Form.Item>\n                                          <div>Name</div>\n                                          <Input \n                                              type='text' \n                                              value={this.state.companyName}\n                                              onChange={this.onNameInput.bind(this)} \n                                          />\n                                    </Form.Item>\n                                </Layout.Col>\n                                <Layout.Col span='12'>\n                                    <Form.Item>\n                                        <div>Alternative name(s)</div>\n                                        <Input\n                                            type='text'\n                                            value={this.state.altNames}\n                                            onChange={this.onAltNameInput.bind(this)}\n                                        />\n                                    </Form.Item>\n                                </Layout.Col>\n                            </Layout.Row>\n                    {/*        \n                        </Collapse.Item>\n\n                        <Collapse.Item title=\"Contact\" name=\"2\">\n                    */}\n                            <h3>Order Delivery</h3>\n                                <Layout.Row>\n                                  <Layout.Col span='12'>\n                                      <Form.Item>\n                                          <div>First name</div>\n                                          <Input \n                                              type='text'\n                                              value={this.state.firstName}\n                                              onChange={this.onFirstNameInput.bind(this)}\n                                          />\n                                      </Form.Item>\n                                  </Layout.Col>\n                                  <Layout.Col span='12'>\n                                      <Form.Item>\n                                          <div>Last Name</div>\n                                          <Input \n                                              type='text'\n                                              value={this.state.lastName}\n                                              onChange={this.onLastNameInput.bind(this)}\n                                          />\n                                      </Form.Item>\n                                  </Layout.Col>\n                                </Layout.Row>\n\n                                <Layout.Row>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Email address</div>\n                                            <Input \n                                                type='email'\n                                                value={this.state.email}\n                                                onChange={this.onEmailInput.bind(this)}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Phone Number</div>\n                                            <Input \n                                                type='text'\n                                                value={this.state.phoneNum}\n                                                onChange={this.onPhoneNumInput.bind(this)}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n\n                                <Layout.Row>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Street address</div>\n                                            <Input\n                                                type='text'\n                                                value={this.state.streetAddress}\n                                                onChange={this.onStreetInput.bind(this)}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Street address continued</div>\n                                            <Input\n                                                type='text'\n                                                value={this.state.streetAddressTwo}\n                                                onChange={this.onStreetTwoInput.bind(this)}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n                                <Layout.Row>\n                                    <Layout.Col span='11'>\n                                        <Form.Item>\n                                            <div>City</div>\n                                            <Input \n                                                type='text' \n                                                value={this.state.city}\n                                                onChange={this.onCityInput.bind(this)}    \n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='5'>\n                                        <Form.Item>\n                                            <div>State</div>\n                                            {/*\n                                            <Select value={this.state.value}> {\n                                                this.state.usStates.map(usState => {\n                                                    return  <Select.Option \n                                                                key={usState.value} \n                                                                value={usState.value} \n                                                                onChange={usState.value}\n                                                            />\n                                                })\n                                            } </Select>\n                                            */}\n                                            <Select value={this.state.usState}>\n                                                <Select.Option value='AL'>AL</Select.Option>\n                                                <Select.Option value='AR'>AR</Select.Option>\n                                                <Select.Option value='AZ'>AZ</Select.Option>\n                                            </Select>\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span=\"8\">\n                                        <Form.Item>\n                                            <div>Zip Code</div>\n                                            <Input \n                                                type=\"text\"\n                                                value={this.state.zip}\n                                                onChange={this.onZipInput.bind(this)}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='24'>\n                                        <Form.Item>\n                                            <div>Country</div>\n                                            <Select value={ this.state.value }> {\n                                                this.state.countries.map(country => {\n                                                    return  <Select.Option\n                                                                key={country.value}\n                                                                label={country.label}\n                                                                value={country.value}\n                                                            />\n                                                })\n                                            } </Select>\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n                        {/*\n                            </Collapse.Item>\n\n                            <Collapse.Item title=\"Legal Parties\" name=\"3\">\n                        */}\n                                <h3>Members</h3>\n                                <Layout.Row>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Name</div>\n                                            <Input\n                                                type='text'\n                                                value={this.state.memberName}\n                                                onChange={this.onMemberInput.bind(this)}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Additional members(if applicable)</div>\n                                            <Input\n                                                type='text'\n                                                value={this.state.addlMemberNames}\n                                                onChange={this.onAddlMemberInput.bind(this)}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n                    {/*\n                            </Collapse.Item>\n                        </Collapse>\n                    */}\n                    </Form>\n                <Button type='submit' onClick={this.handleSubmit.bind(this)}>\n                    Next step\n                </Button>\n            </div>\n        )\n    };\n}\n\nexport default InfoContainer;\n        /*\n        this.state = {\n            labelPosition: 'top',\n            form: {\n                altnames: [{\n                    key: 1,\n                    value: ''\n                }],\n                members: [{\n                    key: 1,\n                    value: ''\n                }],\n                states: [],\n                country: [{\n                  value: 'USA',\n                  label: 'United States of America'\n                }],\n            },\n            value: ''\n        };\n  \n    handleSubmit(e) {\n        e.preventDefault();\n  \n        this.refs.form.validate((valid) => {\n            if (valid) {\n                alert('submit!');\n            } else {\n                console.log('error submit!!');\n                return false;\n            }\n        });\n    }\n  \n    removeAltName(item, e) {\n        var index = this.state.form.altnames.indexOf(item);\n  \n        if (index !== -1) {\n            this.state.form.altnames.splice(index, 1);\n            this.forceUpdate();\n        }\n  \n        e.preventDefault();\n    }\n\n    removeMember(item, event) {\n        let index = this.state.form.members.indexOf(item);\n\n        if(index !== -1 ) {\n            this.state.form.members.splice(index, 1);\n            this.forceUpdate();\n        }\n\n        event.preventDefault();\n    }\n  \n    addAltName(e) {\n        e.preventDefault();\n  \n        this.state.form.altnames.push({\n            key: this.state.form.altnames.length,\n            value: ''\n        });\n  \n        this.forceUpdate();\n    }\n\n    addMember(event) {\n        event.preventDefault();\n\n        this.state.form.members.push({\n            key: this.state.form.members.length,\n            value: ''\n        });\n    }\n  \n    onAltNameChange(index, value) {\n        this.state.form.altnames[index].value = value;\n        //this.setState({ value: this.state.form.altnames[index].value })\n        this.forceUpdate();\n    }\n\n    onMemberChange(index, value) {\n        this.state.form.members[index].value = value;\n        //this.setState({ value: this.state.form.members[index].value });\n    }\n    */\n\n    /*\n    render() {\n        const activeName = \"1\";\n        return (\n            <Collapse value={activeName} accordion>\n                <Collapse.Item title=\"Company\" name=\"1\">\n                    <Form ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"100\" className=\"demo-dynamic\"> \n                        <Form.Item>\n                            <div>State</div>\n                            <Input disabled placeholder=\"Delaware\" value=\"Delaware\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <div>Type</div>\n                            <Input disabled placeholder=\"LLC\" value=\"LLC\" />\n                        </Form.Item>\n                        <Form.Item\n                            label={`Company name`}\n                            rules={{\n                                type: 'object', required: true,\n                                fields: {\n                                    value: { \n                                        required: true, \n                                        message: 'You must name your LLC', \n                                        trigger: 'blur' \n                                    }\n                                }\n                            }}>\n                            <Input />\n                        </Form.Item>\n                        {\n                            this.state.form.altnames.map((altname, index) => {\n                                return (\n                                    <Form.Item\n                                        key={index}\n                                        label={`Alternative name ${index + 1}`}\n                                        prop={`altnames:${index}`}\n                                        rules={{\n                                            type: 'object', required: true,\n                                            fields: {\n                                                value: { \n                                                    required: true, \n                                                    message: 'You must add at least one alternate name', \n                                                    trigger: 'blur' \n                                                }\n                                            }\n                                        }}\n                                    >\n                                        <Input \n                                            value={altname.value} \n                                            onChange={this.onAltNameChange.bind(this, index)}>\n                                        </Input>\n                                        <Button \n                                            onClick={this.removeAltName.bind(this, altname)}>\n                                            Delete\n                                        </Button>\n                                    </Form.Item>\n                                )\n                            })\n                        }\n                        <Form.Item>\n                            <Button \n                                type=\"primary\" \n                                onClick={this.handleSubmit.bind(this)}>\n                                Submit\n                            </Button>\n                            <Button \n                                onClick={this.addAltName.bind(this)}>\n                                New name\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Collapse.Item>\n                <Collapse.Item title=\"Contact\" name=\"2\">\n                    <Form>\n                        <Layout.Row>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input \n                                        placeholder=\"First name\" prepend={\n                                            <Select value=\"\" placeholder=\"Select\"> {\n                                                [\n                                                    'Mr.', \n                                                    'Ms.', \n                                                    'Mrs.',\n                                                    'Dr.',\n                                                    'Prof.'\n                                                ].map((item, index) => \n                                                    <Select.Option \n                                                        key={index} \n                                                        label={item} \n                                                        value={index} \n                                                    />\n                                                )\n                                            }\n                                            </Select>\n                                        } \n                                    />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input placeholder='Last name' gutter=\"20\" />\n                                </Form.Item>                                     \n                            </Layout.Col>\n                        </Layout.Row>\n                        <Layout.Row>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='email' placeholder=\"Email address\" append={\n                                        <Select value=''> {\n                                            [\n                                                \".com\",\n                                                \".net\",\n                                                \".edu\",\n                                                \".gov\"\n                                            ].map((item, index) => \n                                                <Select.Option \n                                                    key={index} \n                                                    label={item} \n                                                    value={index} \n                                                />\n                                            )\n                                        } </Select>\n                                    } />\n                                </Form.Item>           \n                            </Layout.Col> \n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='number' placeholder=\"Phone number\" />\n                                </Form.Item>                      \n                            </Layout.Col>               \n                        </Layout.Row>\n                        <Layout.Row>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='text' placeholder=\"Street Address\" />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='text' placeholder=\"Street Address continued\" />\n                                </Form.Item>\n                            </Layout.Col>\n                        </Layout.Row>\n                        <Layout.Row>\n                            <Layout.Col span='11'>\n                                <Form.Item>\n                                    <Input type='text' placeholder=\"City\" />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='5'>\n                                <Form.Item>\n                                    <Select value={this.state.value}> {\n                                        this.state.form.states.map(el => {\n                                            return  <Select.Option \n                                                        key={el.value} \n                                                        label={el.label} \n                                                        value={el.value} \n                                                    />\n                                        })\n                                    } </Select>\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span=\"8\">\n                                <Form.Item>\n                                    <Input placeholder=\"Zip Code\" />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='24'>\n                                <Form.Item>\n                                    <Select value={ this.state.value }> {\n                                        this.state.form.country.map(item => {\n                                            return  <Select.Option\n                                                        key={item.value}\n                                                        label={item.label}\n                                                        value={item.label}\n                                                    />\n                                        })\n                                    } </Select>\n                                </Form.Item>\n                            </Layout.Col>\n                        </Layout.Row>\n                    </Form>\n                </Collapse.Item>\n                <Collapse.Item title=\"Legal Parties\" name=\"3\">\n                    <Form ref=\"form\" model={this.state.form} rules={this.state.rules}>\n                        {\n                            this.state.form.members.map((member, index) => {\n                                return (\n                                    <Form.Item\n                                        key={index}\n                                        label={`Member name ${index + 1}`}\n                                  \n                                        rules={{\n                                            type: 'object', required: true,\n                                            fields: {\n                                                value: { \n                                                    required: true, \n                                                    message: 'You must add at least one member', \n                                                    trigger: 'blur' \n                                                }\n                                            }\n                                        }}\n                                    >\n                                        <Input \n                                            value={member.value} \n                                            onChange={this.onMemberChange.bind(this, index)}>\n                                        </Input>\n                                        <Button \n                                            onClick={this.removeMember.bind(this, member)}>\n                                            Delete\n                                        </Button>\n                                    </Form.Item>\n                                )\n                            })\n                        }\n                        <Form.Item>\n                            <Button \n                                type=\"primary\" \n                                onClick={this.handleSubmit.bind(this)}>\n                                Submit\n                            </Button>\n                            <Button \n                                onClick={this.addMember.bind(this)}>\n                                New name\n                            </Button>\n                        </Form.Item>                \n                    </Form>\n                </Collapse.Item>\n            </Collapse>\n        )\n    }\n    */\n"]},"metadata":{},"sourceType":"module"}