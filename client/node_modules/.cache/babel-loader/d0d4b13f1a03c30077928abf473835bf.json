{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { Component, PropTypes } from '../../libs';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\nimport TableFooter from './TableFooter'; // let tableIdSeed = 1;\n\nvar Table = function (_Component) {\n  _inherits(Table, _Component);\n\n  function Table(props) {\n    _classCallCheck(this, Table);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {}; // this.tableId = `el-table_${tableIdSeed++}_`;\n    // this.tableId = tableIdSeed++;\n\n    ['syncScroll'].forEach(function (fn) {\n      _this[fn] = _this[fn].bind(_this);\n    });\n    return _this;\n  }\n\n  Table.prototype.getChildContext = function getChildContext() {\n    return {\n      table: this\n    };\n  };\n\n  Table.prototype.syncScroll = function syncScroll() {\n    var headerWrapper = this.headerWrapper,\n        footerWrapper = this.footerWrapper,\n        bodyWrapper = this.bodyWrapper,\n        fixedBodyWrapper = this.fixedBodyWrapper,\n        rightFixedBodyWrapper = this.rightFixedBodyWrapper;\n\n    if (headerWrapper) {\n      headerWrapper.scrollLeft = bodyWrapper.scrollLeft;\n    }\n\n    if (footerWrapper) {\n      footerWrapper.scrollLeft = bodyWrapper.scrollLeft;\n    }\n\n    if (fixedBodyWrapper) {\n      fixedBodyWrapper.scrollTop = bodyWrapper.scrollTop;\n    }\n\n    if (rightFixedBodyWrapper) {\n      rightFixedBodyWrapper.scrollTop = bodyWrapper.scrollTop;\n    }\n  };\n\n  Table.prototype.bindRef = function bindRef(key) {\n    var _this2 = this;\n\n    return function (node) {\n      _this2[key] = node;\n    };\n  };\n\n  Table.prototype.render = function render() {\n    var _props = this.props,\n        tableStoreState = _props.tableStoreState,\n        layout = _props.layout,\n        props = _objectWithoutProperties(_props, ['tableStoreState', 'layout']);\n\n    var isHidden = this.state.isHidden;\n    return React.createElement('div', {\n      style: this.style({\n        height: props.height,\n        maxHeight: props.maxHeight\n      }),\n      className: this.className('el-table', {\n        'el-table--fit': props.fit,\n        'el-table--striped': props.stripe,\n        'el-table--border': props.border,\n        'el-table--hidden': isHidden,\n        'el-table--fluid-height': props.maxHeight,\n        'el-table--enable-row-hover': !tableStoreState.isComplex,\n        'el-table--enable-row-transition': (tableStoreState.data || []).length && (tableStoreState.data || []).length < 100\n      }),\n      ref: this.bindRef('el')\n    }, props.showHeader && React.createElement('div', {\n      className: 'el-table__header-wrapper',\n      ref: this.bindRef('headerWrapper')\n    }, React.createElement(TableHeader, _extends({}, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    }))), React.createElement('div', {\n      style: this.bodyWrapperHeight,\n      className: 'el-table__body-wrapper',\n      ref: this.bindRef('bodyWrapper'),\n      onScroll: this.syncScroll\n    }, React.createElement(TableBody, _extends({}, this.props, {\n      style: {\n        width: this.bodyWidth\n      }\n    })), (!props.data || !props.data.length) && React.createElement('div', {\n      style: {\n        width: this.bodyWidth\n      },\n      className: 'el-table__empty-block'\n    }, React.createElement('span', {\n      className: 'el-table__empty-text'\n    }, props.emptyText))), props.showSummary && React.createElement('div', {\n      style: {\n        visibility: props.data && props.data.length ? 'visible' : 'hidden'\n      },\n      className: 'el-table__footer-wrapper',\n      ref: this.bindRef('footerWrapper')\n    }, React.createElement(TableFooter, _extends({}, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    }))), !!tableStoreState.fixedColumns.length && React.createElement('div', {\n      style: Object.assign({}, this.fixedHeight, {\n        width: layout.fixedWidth || ''\n      }),\n      className: 'el-table__fixed',\n      ref: this.bindRef('fixedWrapper')\n    }, props.showHeader && React.createElement('div', {\n      className: 'el-table__fixed-header-wrapper',\n      ref: this.bindRef('fixedHeaderWrapper')\n    }, React.createElement(TableHeader, _extends({\n      fixed: 'left'\n    }, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    }))), React.createElement('div', {\n      style: Object.assign({}, this.fixedBodyHeight, {\n        top: layout.headerHeight || 0\n      }),\n      className: 'el-table__fixed-body-wrapper',\n      ref: this.bindRef('fixedBodyWrapper')\n    }, React.createElement(TableBody, _extends({\n      fixed: 'left'\n    }, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    }))), props.showSummary && React.createElement('div', {\n      className: 'el-table__fixed-footer-wrapper',\n      ref: this.bindRef('fixedFooterWrapper')\n    }, React.createElement(TableFooter, _extends({\n      fixed: 'left'\n    }, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    })))), !!tableStoreState.rightFixedColumns.length && React.createElement('div', {\n      className: 'el-table__fixed-right',\n      ref: this.bindRef('rightFixedWrapper'),\n      style: Object.assign({}, {\n        width: layout.rightFixedWidth || '',\n        right: layout.scrollY ? props.border ? layout.gutterWidth : layout.gutterWidth || 1 : ''\n      }, this.fixedHeight)\n    }, props.showHeader && React.createElement('div', {\n      className: 'el-table__fixed-header-wrapper',\n      ref: this.bindRef('rightFixedHeaderWrapper')\n    }, React.createElement(TableHeader, _extends({\n      fixed: 'right'\n    }, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    }))), React.createElement('div', {\n      className: 'el-table__fixed-body-wrapper',\n      ref: this.bindRef('rightFixedBodyWrapper'),\n      style: Object.assign({}, {\n        top: layout.headerHeight\n      }, this.fixedBodyHeight)\n    }, React.createElement(TableBody, _extends({\n      fixed: 'right'\n    }, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    }))), props.showSummary && React.createElement('div', {\n      className: 'el-table__fixed-footer-wrapper',\n      ref: this.bindRef('rightFixedFooterWrapper'),\n      style: {\n        visibility: props.data && props.data.length ? 'visible' : 'hidden'\n      }\n    }, React.createElement(TableFooter, _extends({\n      fixed: 'right'\n    }, this.props, {\n      style: {\n        width: this.bodyWidth || ''\n      }\n    })))), !!tableStoreState.rightFixedColumns.length && React.createElement('div', {\n      className: 'el-table__fixed-right-patch',\n      style: {\n        width: layout.scrollY ? layout.gutterWidth : '0',\n        height: layout.headerHeight\n      }\n    }), React.createElement('div', {\n      className: 'el-table__column-resize-proxy',\n      ref: this.bindRef('resizeProxy'),\n      style: {\n        visibility: 'hidden'\n      }\n    }));\n  };\n\n  _createClass(Table, [{\n    key: 'bodyWrapperHeight',\n    get: function get() {\n      var _props2 = this.props,\n          layout = _props2.layout,\n          height = _props2.height,\n          maxHeight = _props2.maxHeight;\n      var style = {};\n\n      if (height) {\n        style.height = layout.bodyHeight || '';\n      } else if (maxHeight) {\n        if (layout.headerHeight !== null) {\n          // 非首次渲染\n          style.maxHeight = maxHeight - layout.headerHeight - layout.footerHeight;\n        }\n      }\n\n      return style;\n    }\n  }, {\n    key: 'bodyWidth',\n    get: function get() {\n      var layout = this.props.layout;\n      var bodyWidth = layout.bodyWidth,\n          scrollY = layout.scrollY,\n          gutterWidth = layout.gutterWidth;\n      return bodyWidth ? bodyWidth - (scrollY ? gutterWidth : 0) : '';\n    }\n  }, {\n    key: 'fixedHeight',\n    get: function get() {\n      var layout = this.props.layout;\n      return {\n        bottom: layout.scrollX ? layout.gutterWidth - 1 : 0\n      };\n    }\n  }, {\n    key: 'fixedBodyHeight',\n    get: function get() {\n      var _props3 = this.props,\n          layout = _props3.layout,\n          props = _objectWithoutProperties(_props3, ['layout']);\n\n      var style = {};\n\n      if (props.height) {\n        style.height = layout.fixedBodyHeight || '';\n      } else if (props.maxHeight) {\n        if (layout.headerHeight !== null) {\n          style.maxHeight = props.maxHeight - layout.headerHeight - layout.footerHeight - (layout.scrollX ? layout.gutterWidth : 0);\n        }\n      }\n\n      return style;\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nTable.contextTypes = {\n  tableStore: PropTypes.any,\n  layout: PropTypes.any\n};\nTable.childContextTypes = {\n  table: PropTypes.any\n};\nexport default Table;","map":null,"metadata":{},"sourceType":"module"}