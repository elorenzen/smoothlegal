{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component, PropTypes } from '../../libs';\n\nvar Pager = function (_Component) {\n  _inherits(Pager, _Component);\n\n  function Pager(props, context) {\n    _classCallCheck(this, Pager);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this.state = {\n      internalCurrentPage: 1,\n      internalPageSize: 0,\n      quickprevIconClass: 'el-icon-more',\n      quicknextIconClass: 'el-icon-more',\n      showPrevMore: false,\n      showNextMore: false\n    };\n    return _this;\n  }\n\n  Pager.prototype.onPagerClick = function onPagerClick(e) {\n    var target = e.target;\n\n    if (target instanceof HTMLElement) {\n      if (target.tagName === 'UL') {\n        return;\n      }\n\n      var newPage = Number(target.textContent);\n      var pageCount = this.props.pageCount;\n      var currentPage = this.props.currentPage;\n\n      if (target.className.indexOf('more') !== -1) {\n        if (target.className.indexOf('quickprev') !== -1) {\n          newPage = currentPage - 5;\n        } else if (target.className.indexOf('quicknext') !== -1) {\n          newPage = currentPage + 5;\n        }\n      }\n      /* istanbul ignore if */\n\n\n      if (!isNaN(newPage)) {\n        if (newPage < 1) {\n          newPage = 1;\n        }\n\n        if (newPage > pageCount) {\n          newPage = pageCount;\n        }\n      }\n\n      if (newPage !== currentPage) {\n        this.props.onChange(newPage);\n      }\n    }\n  };\n\n  Pager.prototype.getPages = function getPages() {\n    var pagerCount = 7;\n    var currentPage = Number(this.props.currentPage);\n    var pageCount = Number(this.props.pageCount);\n    var showPrevMore = false;\n    var showNextMore = false;\n\n    if (pageCount > pagerCount) {\n      if (currentPage > pagerCount - 2) {\n        showPrevMore = true;\n      }\n\n      if (currentPage < pageCount - 2) {\n        showNextMore = true;\n      }\n    }\n\n    var array = [];\n\n    if (showPrevMore && !showNextMore) {\n      var startPage = pageCount - (pagerCount - 2);\n\n      for (var i = startPage; i < pageCount; i++) {\n        array.push(i);\n      }\n    } else if (!showPrevMore && showNextMore) {\n      for (var _i = 2; _i < pagerCount; _i++) {\n        array.push(_i);\n      }\n    } else if (showPrevMore && showNextMore) {\n      var offset = Math.floor(pagerCount / 2) - 1;\n\n      for (var _i2 = currentPage - offset; _i2 <= currentPage + offset; _i2++) {\n        array.push(_i2);\n      }\n    } else {\n      for (var _i3 = 2; _i3 < pageCount; _i3++) {\n        array.push(_i3);\n      }\n    }\n\n    this.state.showPrevMore = showPrevMore;\n    this.state.showNextMore = showNextMore;\n    this.state.quickprevIconClass = showPrevMore ? this.state.quickprevIconClass : 'el-icon-more';\n    this.state.quicknextIconClass = showNextMore ? this.state.quicknextIconClass : 'el-icon-more';\n    return array;\n  };\n\n  Pager.prototype.render = function render() {\n    var _this2 = this;\n\n    var pagers = this.getPages();\n    var _props = this.props,\n        currentPage = _props.currentPage,\n        pageCount = _props.pageCount;\n    var _state = this.state,\n        quickprevIconClass = _state.quickprevIconClass,\n        quicknextIconClass = _state.quicknextIconClass;\n    return React.createElement('ul', {\n      onClick: this.onPagerClick.bind(this),\n      className: 'el-pager'\n    }, pageCount > 0 && React.createElement('li', {\n      className: this.classNames('number', {\n        active: currentPage === 1\n      })\n    }, '1'), this.state.showPrevMore && React.createElement('li', {\n      className: this.classNames('el-icon more btn-quickprev', quickprevIconClass),\n      onMouseEnter: function onMouseEnter() {\n        _this2.setState({\n          quickprevIconClass: 'el-icon-d-arrow-left'\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        _this2.setState({\n          quickprevIconClass: 'el-icon-more'\n        });\n      }\n    }), pagers.map(function (pager, idx) {\n      return React.createElement('li', {\n        key: idx,\n        className: _this2.classNames('number', {\n          active: currentPage === pager\n        })\n      }, pager);\n    }), this.state.showNextMore && React.createElement('li', {\n      className: this.classNames('el-icon more btn-quicknext', quicknextIconClass),\n      onMouseEnter: function onMouseEnter() {\n        _this2.setState({\n          quicknextIconClass: 'el-icon-d-arrow-right'\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        _this2.setState({\n          quicknextIconClass: 'el-icon-more'\n        });\n      }\n    }), pageCount > 1 && React.createElement('li', {\n      className: this.classNames('number', {\n        active: currentPage === pageCount\n      })\n    }, pageCount));\n  };\n\n  return Pager;\n}(Component);\n\nexport default Pager;\nPager.propTypes = {\n  currentPage: PropTypes.number,\n  pageCount: PropTypes.number\n};","map":null,"metadata":{},"sourceType":"module"}