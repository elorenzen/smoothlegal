{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes } from '../../libs';\n\nvar Loading = function (_Component) {\n  _inherits(Loading, _Component);\n\n  function Loading() {\n    _classCallCheck(this, Loading);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Loading.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.enableScroll();\n  };\n\n  Loading.prototype.getStyle = function getStyle() {\n    if (this.props.fullscreen) {\n      this.disableScroll();\n      return {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        zIndex: 99999\n      };\n    } else {\n      this.enableScroll();\n\n      if (this.props.loading) {\n        return {\n          position: 'relative'\n        };\n      }\n\n      return {};\n    }\n  };\n\n  Loading.prototype.documentBody = function documentBody() {\n    return document.body;\n  };\n\n  Loading.prototype.disableScroll = function disableScroll() {\n    var documentBody = this.documentBody();\n\n    if (documentBody) {\n      documentBody.style.setProperty('overflow', 'hidden');\n    }\n  };\n\n  Loading.prototype.enableScroll = function enableScroll() {\n    var documentBody = this.documentBody();\n\n    if (documentBody) {\n      documentBody.style.removeProperty('overflow');\n    }\n  };\n\n  Loading.prototype.render = function render() {\n    var _props = this.props,\n        loading = _props.loading,\n        fullscreen = _props.fullscreen,\n        text = _props.text;\n    return React.createElement('div', {\n      style: this.style(this.getStyle()),\n      className: this.className()\n    }, loading && React.createElement('div', {\n      style: {\n        display: 'block',\n        position: 'absolute',\n        zIndex: 657,\n        backgroundColor: 'rgba(255, 255, 255, 0.901961)',\n        margin: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }, React.createElement('div', {\n      className: this.classNames('el-loading-spinner', {\n        'is-full-screen': fullscreen\n      }),\n      style: {\n        position: 'absolute',\n        display: 'inline-block',\n        left: 0\n      }\n    }, React.createElement('svg', {\n      className: 'circular',\n      viewBox: '25 25 50 50'\n    }, React.createElement('circle', {\n      className: 'path',\n      cx: '50',\n      cy: '50',\n      r: '20',\n      fill: 'none'\n    })), text && React.createElement('p', {\n      className: 'el-loading-text'\n    }, text))), this.props.children);\n  };\n\n  return Loading;\n}(Component);\n\nexport default Loading;\nLoading.propTypes = {\n  loading: PropTypes.bool,\n  fullscreen: PropTypes.bool,\n  text: PropTypes.string\n};\nLoading.defaultProps = {\n  loading: true\n};","map":null,"metadata":{},"sourceType":"module"}