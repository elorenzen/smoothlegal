{"ast":null,"code":"var _jsxFileName = \"/Users/francislarson/src/smoothlegal/src/components/FormContainer.js\";\nimport React from 'react';\nimport { Layout, Input, Button, Collapse, Steps, Menu, Form, Select } from 'element-react/next';\n\nclass FormContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: 0,\n      stateOfIncoporation: 'Delaware',\n      type: 'LLC',\n      companyName: '',\n      altnames: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNum: '',\n      streetAddress: '',\n      streetAddressTwo: '',\n      city: '',\n      usStates: [{\n        value: 'AL',\n        label: 'Alabama'\n      }, {\n        value: 'AK',\n        label: 'Alaska'\n      }, {\n        value: 'AZ',\n        label: 'Arizona'\n      }, {\n        value: 'AR',\n        label: 'Arkansas'\n      }, {\n        value: 'CA',\n        label: 'California'\n      }, {\n        value: 'CO',\n        label: 'Colorado'\n      }, {\n        value: 'CT',\n        label: 'Connecticut'\n      }, {\n        value: 'DE',\n        label: 'Delaware'\n      }, {\n        value: 'DC',\n        label: 'District of Columbia'\n      }, {\n        value: 'FL',\n        label: 'Florida'\n      }, {\n        value: 'GA',\n        label: 'Georgia'\n      }, {\n        value: 'HI',\n        label: 'Hawaii'\n      }, {\n        value: 'ID',\n        label: 'Idaho'\n      }, {\n        value: 'IL',\n        label: 'Illinois'\n      }, {\n        value: 'IN',\n        label: 'Indiana'\n      }, {\n        value: 'IA',\n        label: 'Iowa'\n      }, {\n        value: 'KS',\n        label: 'Kansas'\n      }, {\n        value: 'KY',\n        label: 'Kentucky'\n      }, {\n        value: 'LA',\n        label: 'Louisiana'\n      }, {\n        value: 'ME',\n        label: 'Maine'\n      }, {\n        value: 'MD',\n        label: 'Maryland'\n      }, {\n        value: 'MA',\n        label: 'Massachusetts'\n      }, {\n        value: 'MI',\n        label: 'Michigan'\n      }, {\n        value: 'MN',\n        label: 'Minnesota'\n      }, {\n        value: 'MS',\n        label: 'Mississippi'\n      }, {\n        value: 'MO',\n        label: 'Missouri'\n      }, {\n        value: 'MT',\n        label: 'Montana'\n      }, {\n        value: 'NE',\n        label: 'Nebraska'\n      }, {\n        value: 'NV',\n        label: 'Nevada'\n      }, {\n        value: 'NH',\n        label: 'New Hampshire'\n      }, {\n        value: 'NJ',\n        label: 'New Jersey'\n      }, {\n        value: 'NM',\n        label: 'New Mexico'\n      }, {\n        value: 'NY',\n        label: 'New York'\n      }, {\n        value: 'NC',\n        label: 'North Carolina'\n      }, {\n        value: 'ND',\n        label: 'North Dakota'\n      }, {\n        value: 'OH',\n        label: 'Ohio'\n      }, {\n        value: 'OK',\n        label: 'Oklahoma'\n      }, {\n        value: 'OR',\n        label: 'Oregon'\n      }, {\n        value: 'PA',\n        label: 'Pennsylvania'\n      }, {\n        value: 'RI',\n        label: 'Rhode Island'\n      }, {\n        value: 'SC',\n        label: 'South Carolina'\n      }, {\n        value: 'SD',\n        label: 'South Dakota'\n      }, {\n        value: 'TN',\n        label: 'Tennessee'\n      }, {\n        value: 'TX',\n        label: 'Texas'\n      }, {\n        value: 'UT',\n        label: 'Utah'\n      }, {\n        value: 'VT',\n        label: 'Vermont'\n      }, {\n        value: 'VA',\n        label: 'Virginia'\n      }, {\n        value: 'WA',\n        label: 'Washington'\n      }, {\n        value: 'WV',\n        label: 'West Virginia'\n      }, {\n        value: 'WI',\n        label: 'Wisconsin'\n      }, {\n        value: 'WY',\n        label: 'Wyoming'\n      }],\n      zip: '',\n      countries: [{\n        value: 'United States of America',\n        label: 'USA'\n      }],\n      memberName: '',\n      addlMemberNames: ''\n    };\n\n    this.onNameInput = event => {\n      this.setState({\n        companyName: event.target.value\n      });\n    };\n\n    this.onAltNameInput = event => {\n      this.setState({\n        altnames: event.target.value\n      });\n    };\n\n    this.onFirstNameInput = event => {\n      this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    this.onLastNameInput = event => {\n      this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    this.onEmailInput = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.onPhoneNumInput = event => {\n      this.setState({\n        phoneNum: event.target.value\n      });\n    };\n\n    this.onStreetInput = event => {\n      this.setState({\n        streetAddress: event.target.value\n      });\n    };\n\n    this.onStreetTwoInput = event => {\n      this.setState({\n        streetAddressTwo: event.target.value\n      });\n    };\n\n    this.onCityInput = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.onStatesSelect = event => {\n      let index = this.state.usStates.findIndex(function (usState) {\n        return usState.value === event.target.value;\n      });\n      this.setState({\n        usStates: event[index].value.target.value\n      });\n    };\n\n    this.onZipInput = event => {\n      this.setState({\n        zip: event.target.value\n      });\n    };\n\n    this.onMemberInput = event => {\n      this.setState({\n        memberName: event.target.value\n      });\n    };\n\n    this.onAddlMemberInput = event => {\n      this.setState({\n        addlMemberNames: event.target.value\n      });\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let index = this.state.usStates.findIndex(function (usState) {\n      return usState.value === event.target.value;\n    });\n    alert(\"\\n            The name '\".concat(this.state.companyName, \"' was submitted. \\n            The alternate name '\").concat(this.state.altnames, \"' was submitted.\\n            The first name for order delivery is '\").concat(this.state.firstName, \"'.\\n            The last name for order delivery is '\").concat(this.state.lastName, \"'.\\n            The email address is '\").concat(this.state.email, \"'.\\n            The phone number is \").concat(this.state.phoneNum, \".\\n            The address is \").concat(this.state.streetAddress, \" \").concat(this.state.city, \", \\n            \").concat(this.state.usStates[4].value, \" \").concat(this.state.zip, \".\\n            LLC members include: \").concat(this.state.memberName, \" \").concat(this.state.addlMemberNames, \".\\n        \"));\n    let active = this.state.active + 1;\n\n    if (active > 3) {\n      active = 0;\n    }\n\n    this.setState({\n      active\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Form, {\n      ref: \"form\",\n      model: this.state,\n      rules: this.state.rules,\n      labelWidth: \"100\",\n      className: \"demo-dynamic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"State of Incorporation\"), React.createElement(Input, {\n      disabled: true,\n      placeholder: \"Delaware\",\n      value: this.state.stateOfIncoporation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Type\"), React.createElement(Input, {\n      disabled: true,\n      placeholder: \"LLC\",\n      value: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.companyName,\n      onChange: this.onNameInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Alternative name(s)\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.altnames,\n      onChange: this.onAltNameInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Order Delivery\"), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.firstName,\n      onChange: this.onFirstNameInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.lastName,\n      onChange: this.onLastNameInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.onEmailInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.phoneNum,\n      onChange: this.onPhoneNumInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Street address\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.streetAddress,\n      onChange: this.onStreetInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Street address continued\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.streetAddressTwo,\n      onChange: this.onStreetTwoInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    })))), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.city,\n      onChange: this.onCityInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"State\"), React.createElement(Select, {\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \" \", this.state.usStates.map(usState => {\n      return React.createElement(Select.Option, {\n        key: usState.value,\n        value: usState.value,\n        onChange: usState.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      });\n    }), \" \"))), React.createElement(Layout.Col, {\n      span: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"Zip Code\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.zip,\n      onChange: this.onZipInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Select, {\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, \" \", this.state.countries.map(country => {\n      return React.createElement(Select.Option, {\n        key: country.value,\n        label: country.label,\n        value: country.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      });\n    }), \" \")))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \"Members\"), React.createElement(Layout.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.memberName,\n      onChange: this.onMemberInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }))), React.createElement(Layout.Col, {\n      span: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, \"Additional members(if applicable)\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.addlMemberNames,\n      onChange: this.onAddlMemberInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default FormContainer;\n/*\nthis.state = {\n    labelPosition: 'top',\n    form: {\n        altnames: [{\n            key: 1,\n            value: ''\n        }],\n        members: [{\n            key: 1,\n            value: ''\n        }],\n        states: [],\n        country: [{\n          value: 'USA',\n          label: 'United States of America'\n        }],\n    },\n    value: ''\n};\nhandleSubmit(e) {\ne.preventDefault();\n   this.refs.form.validate((valid) => {\n    if (valid) {\n        alert('submit!');\n    } else {\n        console.log('error submit!!');\n        return false;\n    }\n});\n}\nremoveAltName(item, e) {\nvar index = this.state.form.altnames.indexOf(item);\n   if (index !== -1) {\n    this.state.form.altnames.splice(index, 1);\n    this.forceUpdate();\n}\n   e.preventDefault();\n}\nremoveMember(item, event) {\nlet index = this.state.form.members.indexOf(item);\n if(index !== -1 ) {\n    this.state.form.members.splice(index, 1);\n    this.forceUpdate();\n}\n event.preventDefault();\n}\naddAltName(e) {\ne.preventDefault();\n   this.state.form.altnames.push({\n    key: this.state.form.altnames.length,\n    value: ''\n});\n   this.forceUpdate();\n}\naddMember(event) {\nevent.preventDefault();\n this.state.form.members.push({\n    key: this.state.form.members.length,\n    value: ''\n});\n}\nonAltNameChange(index, value) {\nthis.state.form.altnames[index].value = value;\n//this.setState({ value: this.state.form.altnames[index].value })\nthis.forceUpdate();\n}\nonMemberChange(index, value) {\nthis.state.form.members[index].value = value;\n//this.setState({ value: this.state.form.members[index].value });\n}\n*/\n\n/*\nrender() {\n    const activeName = \"1\";\n    return (\n        <Collapse value={activeName} accordion>\n            <Collapse.Item title=\"Company\" name=\"1\">\n                <Form ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"100\" className=\"demo-dynamic\"> \n                    <Form.Item>\n                        <div>State</div>\n                        <Input disabled placeholder=\"Delaware\" value=\"Delaware\" />\n                    </Form.Item>\n                    <Form.Item>\n                        <div>Type</div>\n                        <Input disabled placeholder=\"LLC\" value=\"LLC\" />\n                    </Form.Item>\n                    <Form.Item\n                        label={`Company name`}\n                        rules={{\n                            type: 'object', required: true,\n                            fields: {\n                                value: { \n                                    required: true, \n                                    message: 'You must name your LLC', \n                                    trigger: 'blur' \n                                }\n                            }\n                        }}>\n                        <Input />\n                    </Form.Item>\n                    {\n                        this.state.form.altnames.map((altname, index) => {\n                            return (\n                                <Form.Item\n                                    key={index}\n                                    label={`Alternative name ${index + 1}`}\n                                    prop={`altnames:${index}`}\n                                    rules={{\n                                        type: 'object', required: true,\n                                        fields: {\n                                            value: { \n                                                required: true, \n                                                message: 'You must add at least one alternate name', \n                                                trigger: 'blur' \n                                            }\n                                        }\n                                    }}\n                                >\n                                    <Input \n                                        value={altname.value} \n                                        onChange={this.onAltNameChange.bind(this, index)}>\n                                    </Input>\n                                    <Button \n                                        onClick={this.removeAltName.bind(this, altname)}>\n                                        Delete\n                                    </Button>\n                                </Form.Item>\n                            )\n                        })\n                    }\n                    <Form.Item>\n                        <Button \n                            type=\"primary\" \n                            onClick={this.handleSubmit.bind(this)}>\n                            Submit\n                        </Button>\n                        <Button \n                            onClick={this.addAltName.bind(this)}>\n                            New name\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Collapse.Item>\n            <Collapse.Item title=\"Contact\" name=\"2\">\n                <Form>\n                    <Layout.Row>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input \n                                    placeholder=\"First name\" prepend={\n                                        <Select value=\"\" placeholder=\"Select\"> {\n                                            [\n                                                'Mr.', \n                                                'Ms.', \n                                                'Mrs.',\n                                                'Dr.',\n                                                'Prof.'\n                                            ].map((item, index) => \n                                                <Select.Option \n                                                    key={index} \n                                                    label={item} \n                                                    value={index} \n                                                />\n                                            )\n                                        }\n                                        </Select>\n                                    } \n                                />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input placeholder='Last name' gutter=\"20\" />\n                            </Form.Item>                                     \n                        </Layout.Col>\n                    </Layout.Row>\n                    <Layout.Row>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='email' placeholder=\"Email address\" append={\n                                    <Select value=''> {\n                                        [\n                                            \".com\",\n                                            \".net\",\n                                            \".edu\",\n                                            \".gov\"\n                                        ].map((item, index) => \n                                            <Select.Option \n                                                key={index} \n                                                label={item} \n                                                value={index} \n                                            />\n                                        )\n                                    } </Select>\n                                } />\n                            </Form.Item>           \n                        </Layout.Col> \n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='number' placeholder=\"Phone number\" />\n                            </Form.Item>                      \n                        </Layout.Col>               \n                    </Layout.Row>\n                    <Layout.Row>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='text' placeholder=\"Street Address\" />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='12'>\n                            <Form.Item>\n                                <Input type='text' placeholder=\"Street Address continued\" />\n                            </Form.Item>\n                        </Layout.Col>\n                    </Layout.Row>\n                    <Layout.Row>\n                        <Layout.Col span='11'>\n                            <Form.Item>\n                                <Input type='text' placeholder=\"City\" />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='5'>\n                            <Form.Item>\n                                <Select value={this.state.value}> {\n                                    this.state.form.states.map(el => {\n                                        return  <Select.Option \n                                                    key={el.value} \n                                                    label={el.label} \n                                                    value={el.value} \n                                                />\n                                    })\n                                } </Select>\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span=\"8\">\n                            <Form.Item>\n                                <Input placeholder=\"Zip Code\" />\n                            </Form.Item>\n                        </Layout.Col>\n                        <Layout.Col span='24'>\n                            <Form.Item>\n                                <Select value={ this.state.value }> {\n                                    this.state.form.country.map(item => {\n                                        return  <Select.Option\n                                                    key={item.value}\n                                                    label={item.label}\n                                                    value={item.label}\n                                                />\n                                    })\n                                } </Select>\n                            </Form.Item>\n                        </Layout.Col>\n                    </Layout.Row>\n                </Form>\n            </Collapse.Item>\n            <Collapse.Item title=\"Legal Parties\" name=\"3\">\n                <Form ref=\"form\" model={this.state.form} rules={this.state.rules}>\n                    {\n                        this.state.form.members.map((member, index) => {\n                            return (\n                                <Form.Item\n                                    key={index}\n                                    label={`Member name ${index + 1}`}\n                              \n                                    rules={{\n                                        type: 'object', required: true,\n                                        fields: {\n                                            value: { \n                                                required: true, \n                                                message: 'You must add at least one member', \n                                                trigger: 'blur' \n                                            }\n                                        }\n                                    }}\n                                >\n                                    <Input \n                                        value={member.value} \n                                        onChange={this.onMemberChange.bind(this, index)}>\n                                    </Input>\n                                    <Button \n                                        onClick={this.removeMember.bind(this, member)}>\n                                        Delete\n                                    </Button>\n                                </Form.Item>\n                            )\n                        })\n                    }\n                    <Form.Item>\n                        <Button \n                            type=\"primary\" \n                            onClick={this.handleSubmit.bind(this)}>\n                            Submit\n                        </Button>\n                        <Button \n                            onClick={this.addMember.bind(this)}>\n                            New name\n                        </Button>\n                    </Form.Item>                \n                </Form>\n            </Collapse.Item>\n        </Collapse>\n    )\n}\n*/","map":{"version":3,"sources":["/Users/francislarson/src/smoothlegal/src/components/FormContainer.js"],"names":["React","Layout","Input","Button","Collapse","Steps","Menu","Form","Select","FormContainer","Component","state","active","stateOfIncoporation","type","companyName","altnames","firstName","lastName","email","phoneNum","streetAddress","streetAddressTwo","city","usStates","value","label","zip","countries","memberName","addlMemberNames","onNameInput","event","setState","target","onAltNameInput","onFirstNameInput","onLastNameInput","onEmailInput","onPhoneNumInput","onStreetInput","onStreetTwoInput","onCityInput","onStatesSelect","index","findIndex","usState","onZipInput","onMemberInput","onAddlMemberInput","handleSubmit","preventDefault","alert","render","rules","map","country"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  { \n            Layout, \n            Input, \n            Button,\n            Collapse,\n            Steps, \n            Menu, \n            Form, \n            Select\n        } from 'element-react/next';\n\nclass FormContainer extends React.Component {\n    \n  /*\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // Toggles nav steps\n            active: 0,\n            form: {\n                stateOfIncoporation: 'Delaware',\n                type: 'LLC',\n                name: ''\n            }\n        };\n    }\n  */\n    state = {\n        active: 0,\n        stateOfIncoporation: 'Delaware',\n        type: 'LLC',\n        companyName: '',\n        altnames: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNum: '',\n        streetAddress: '',\n        streetAddressTwo: '',\n        city: '',\n        usStates: [\n          { value: 'AL',\n            label: 'Alabama'\n          }, {\n            value: 'AK',\n            label: 'Alaska'\n          }, {\n            value: 'AZ',\n            label: 'Arizona'\n          }, {\n            value: 'AR',\n            label: 'Arkansas'\n          }, {\n            value: 'CA',\n            label: 'California'\n          }, {\n            value: 'CO',\n            label: 'Colorado'\n          }, {\n            value: 'CT',\n            label: 'Connecticut'\n          }, {\n            value: 'DE',\n            label: 'Delaware'\n          }, {\n            value: 'DC',\n            label: 'District of Columbia'\n          }, {\n            value: 'FL',\n            label: 'Florida'\n          }, {\n            value: 'GA',\n            label: 'Georgia'\n          }, {\n            value: 'HI',\n            label: 'Hawaii'\n          }, {\n            value: 'ID',\n            label: 'Idaho'\n          }, {\n            value: 'IL',\n            label: 'Illinois'\n          }, {\n            value: 'IN',\n            label: 'Indiana'\n          }, {\n            value: 'IA',\n            label: 'Iowa'\n          }, {\n            value: 'KS',\n            label: 'Kansas'\n          }, {\n            value: 'KY',\n            label: 'Kentucky'\n          }, {\n            value: 'LA',\n            label: 'Louisiana'\n          }, {\n            value: 'ME',\n            label: 'Maine'\n          }, {\n            value: 'MD',\n            label: 'Maryland'\n          }, {\n            value: 'MA',\n            label: 'Massachusetts'\n          }, {\n            value: 'MI',\n            label: 'Michigan'\n          }, {\n            value: 'MN',\n            label: 'Minnesota'\n          }, {\n            value: 'MS',\n            label: 'Mississippi'\n          }, {\n            value: 'MO',\n            label: 'Missouri'\n          }, {\n            value: 'MT',\n            label: 'Montana'\n          }, {\n            value: 'NE',\n            label: 'Nebraska'\n          }, {\n            value: 'NV',\n            label: 'Nevada'\n          }, {\n            value: 'NH',\n            label: 'New Hampshire'\n          }, {\n            value: 'NJ',\n            label: 'New Jersey'\n          }, {\n            value: 'NM',\n            label: 'New Mexico'\n          }, {\n            value: 'NY',\n            label: 'New York'\n          }, {\n            value: 'NC',\n            label: 'North Carolina'\n          }, {\n            value: 'ND',\n            label: 'North Dakota'\n          }, {\n            value: 'OH',\n            label: 'Ohio'\n          }, {\n            value: 'OK',\n            label: 'Oklahoma'\n          }, {\n            value: 'OR',\n            label: 'Oregon'\n          }, {\n            value: 'PA',\n            label: 'Pennsylvania'\n          }, {\n            value: 'RI',\n            label: 'Rhode Island'\n          }, {\n            value: 'SC',\n            label: 'South Carolina'\n          }, {\n            value: 'SD',\n            label: 'South Dakota'\n          }, {\n            value: 'TN',\n            label: 'Tennessee'\n          }, {\n            value: 'TX',\n            label: 'Texas'\n          }, {\n            value: 'UT',\n            label: 'Utah'\n          }, {\n            value: 'VT',\n            label: 'Vermont'\n          }, {\n            value: 'VA',\n            label: 'Virginia'\n          }, {\n            value: 'WA',\n            label: 'Washington'\n          }, {\n            value: 'WV',\n            label: 'West Virginia'\n          }, {\n            value: 'WI',\n            label: 'Wisconsin'\n          }, {\n            value: 'WY',\n            label: 'Wyoming'\n          }\n        ],\n        zip: '',\n        countries: [\n          { value: 'United States of America', label: 'USA' }\n        ],\n        memberName: '',\n        addlMemberNames: ''\n    }\n\n    onNameInput = (event) => {\n        this.setState({ companyName: event.target.value });\n    }\n\n    onAltNameInput = (event) => {\n        this.setState({ altnames: event.target.value });\n    }\n\n    onFirstNameInput = (event) => {\n        this.setState({ firstName: event.target.value });\n    }\n\n    onLastNameInput = (event) => {\n        this.setState({ lastName: event.target.value });\n    }\n\n    onEmailInput = (event) => {\n        this.setState({ email: event.target.value });\n    }\n\n    onPhoneNumInput = (event) => {\n        this.setState({ phoneNum: event.target.value });\n    }\n\n    onStreetInput = (event) => {\n        this.setState({ streetAddress: event.target.value })\n    }\n\n    onStreetTwoInput = (event) => {\n        this.setState({ streetAddressTwo: event.target.value })\n    }\n\n    onCityInput = (event) => {\n        this.setState({ city: event.target.value });\n    }\n\n    onStatesSelect = (event) => {\n        let index = this.state.usStates.findIndex(function(usState) {\n            return usState.value === event.target.value;\n        })\n\n        this.setState({ usStates: event[index].value.target.value })\n    }\n\n    onZipInput = (event) => {\n        this.setState({ zip: event.target.value });\n    }\n\n    onMemberInput = (event) => {\n        this.setState({ memberName: event.target.value });\n    }\n\n    onAddlMemberInput = (event) => {\n        this.setState({ addlMemberNames: event.target.value });\n    }\n\n    handleSubmit(event) {\n    \n        event.preventDefault();\n\n        let index = this.state.usStates.findIndex(function(usState) {\n            return usState.value === event.target.value;\n        })\n\n        alert(`\n            The name '${this.state.companyName}' was submitted. \n            The alternate name '${this.state.altnames}' was submitted.\n            The first name for order delivery is '${this.state.firstName}'.\n            The last name for order delivery is '${this.state.lastName}'.\n            The email address is '${this.state.email}'.\n            The phone number is ${this.state.phoneNum}.\n            The address is ${this.state.streetAddress} ${this.state.city}, \n            ${this.state.usStates[4].value} ${this.state.zip}.\n            LLC members include: ${this.state.memberName} ${this.state.addlMemberNames}.\n        `);\n\n        let active = this.state.active + 1;\n            if (active > 3) {\n                active = 0;\n            }\n        this.setState({ active });\n    };\n    \n    render(){\n        return (\n            <div>\n              {/*\n                <Menu defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\">\n                  <Steps space={500} active={this.state.active} style={{marginLeft: '22%', padding: '10px'}} finishStatus=\"success\">\n                    <Steps.Step title=\"Company & Contact\"></Steps.Step>\n                    <Steps.Step title=\"Options & Services\"></Steps.Step>\n                    <Steps.Step title=\"Review & Pay\"></Steps.Step>\n                  </Steps>\n                </Menu>\n              */}\n                <Form ref=\"form\" model={this.state} rules={this.state.rules} labelWidth=\"100\" className=\"demo-dynamic\">\n                {/*\n                    <Collapse>\n                        <Collapse.Item title=\"Company\" name=\"1\">\n                */}\n                            <Layout.Row>\n                                <Layout.Col span=\"12\">\n                                    <Form.Item>\n                                        <div>State of Incorporation</div>\n                                        <Input disabled placeholder=\"Delaware\" value={this.state.stateOfIncoporation} />\n                                    </Form.Item>\n                                </Layout.Col>\n                                <Layout.Col span=\"12\">\n                                    <Form.Item>\n                                        <div>Type</div>\n                                        <Input disabled placeholder=\"LLC\" value={this.state.type} />\n                                    </Form.Item>\n                                </Layout.Col>  \n                            </Layout.Row>\n                            <Layout.Row>\n                                <Layout.Col span='12'>\n                                    <Form.Item>\n                                          <div>Name</div>\n                                          <input \n                                              type='text' \n                                              value={this.state.companyName}\n                                              onChange={this.onNameInput} \n                                          />\n                                    </Form.Item>\n                                </Layout.Col>\n                                <Layout.Col span='12'>\n                                    <Form.Item>\n                                        <div>Alternative name(s)</div>\n                                        <input\n                                            type='text'\n                                            value={this.state.altnames}\n                                            onChange={this.onAltNameInput}\n                                        />\n                                    </Form.Item>\n                                </Layout.Col>\n                            </Layout.Row>\n                    {/*        \n                        </Collapse.Item>\n\n                        <Collapse.Item title=\"Contact\" name=\"2\">\n                    */}\n                            <h3>Order Delivery</h3>\n                                <Layout.Row>\n                                  <Layout.Col span='12'>\n                                      <Form.Item>\n                                          <div>First name</div>\n                                          <input \n                                              type='text'\n                                              value={this.state.firstName}\n                                              onChange={this.onFirstNameInput}\n                                          />\n                                      </Form.Item>\n                                  </Layout.Col>\n                                  <Layout.Col span='12'>\n                                      <Form.Item>\n                                          <div>Last Name</div>\n                                          <input \n                                              type='text'\n                                              value={this.state.lastName}\n                                              onChange={this.onLastNameInput}\n                                          />\n                                      </Form.Item>\n                                  </Layout.Col>\n                                </Layout.Row>\n\n                                <Layout.Row>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Email address</div>\n                                            <input \n                                                type='email'\n                                                value={this.state.email}\n                                                onChange={this.onEmailInput}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Phone Number</div>\n                                            <input \n                                                type='text'\n                                                value={this.state.phoneNum}\n                                                onChange={this.onPhoneNumInput}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n\n                                <Layout.Row>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Street address</div>\n                                            <input\n                                                type='text'\n                                                value={this.state.streetAddress}\n                                                onChange={this.onStreetInput}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Street address continued</div>\n                                            <input\n                                                type='text'\n                                                value={this.state.streetAddressTwo}\n                                                onChange={this.onStreetTwoInput}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n                                <Layout.Row>\n                                    <Layout.Col span='11'>\n                                        <Form.Item>\n                                            <input \n                                                type='text' \n                                                value={this.state.city}\n                                                onChange={this.onCityInput}    \n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='5'>\n                                        <Form.Item>\n                                            <div>State</div>\n                                            <Select value={this.state.value}> {\n                                                this.state.usStates.map(usState => {\n                                                    return  <Select.Option \n                                                                key={usState.value} \n                                                                value={usState.value} \n                                                                onChange={usState.value}\n                                                            />\n                                                })\n                                            } </Select>\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span=\"8\">\n                                        <Form.Item>\n                                            <div>Zip Code</div>\n                                            <input \n                                                type=\"text\"\n                                                value={this.state.zip}\n                                                onChange={this.onZipInput}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='24'>\n                                        <Form.Item>\n                                            <div>Country</div>\n                                            <Select value={ this.state.value }> {\n                                                this.state.countries.map(country => {\n                                                    return  <Select.Option\n                                                                key={country.value}\n                                                                label={country.label}\n                                                                value={country.value}\n                                                            />\n                                                })\n                                            } </Select>\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n                        {/*\n                            </Collapse.Item>\n\n                            <Collapse.Item title=\"Legal Parties\" name=\"3\">\n                        */}\n                                <h3>Members</h3>\n                                <Layout.Row>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Name</div>\n                                            <input\n                                                type='text'\n                                                value={this.state.memberName}\n                                                onChange={this.onMemberInput}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                    <Layout.Col span='12'>\n                                        <Form.Item>\n                                            <div>Additional members(if applicable)</div>\n                                            <input\n                                                type='text'\n                                                value={this.state.addlMemberNames}\n                                                onChange={this.onAddlMemberInput}\n                                            />\n                                        </Form.Item>\n                                    </Layout.Col>\n                                </Layout.Row>\n                    {/*\n                            </Collapse.Item>\n                        </Collapse>\n                    */}\n                    </Form>\n                    {/*\n                <Button type='submit' onClick={this.handleSubmit.bind(this)}>\n                    Next step\n                </Button>\n                    */}\n            </div>\n        )\n    };\n}\nexport default FormContainer;\n        /*\n        this.state = {\n            labelPosition: 'top',\n            form: {\n                altnames: [{\n                    key: 1,\n                    value: ''\n                }],\n                members: [{\n                    key: 1,\n                    value: ''\n                }],\n                states: [],\n                country: [{\n                  value: 'USA',\n                  label: 'United States of America'\n                }],\n            },\n            value: ''\n        };\n  \n    handleSubmit(e) {\n        e.preventDefault();\n  \n        this.refs.form.validate((valid) => {\n            if (valid) {\n                alert('submit!');\n            } else {\n                console.log('error submit!!');\n                return false;\n            }\n        });\n    }\n  \n    removeAltName(item, e) {\n        var index = this.state.form.altnames.indexOf(item);\n  \n        if (index !== -1) {\n            this.state.form.altnames.splice(index, 1);\n            this.forceUpdate();\n        }\n  \n        e.preventDefault();\n    }\n\n    removeMember(item, event) {\n        let index = this.state.form.members.indexOf(item);\n\n        if(index !== -1 ) {\n            this.state.form.members.splice(index, 1);\n            this.forceUpdate();\n        }\n\n        event.preventDefault();\n    }\n  \n    addAltName(e) {\n        e.preventDefault();\n  \n        this.state.form.altnames.push({\n            key: this.state.form.altnames.length,\n            value: ''\n        });\n  \n        this.forceUpdate();\n    }\n\n    addMember(event) {\n        event.preventDefault();\n\n        this.state.form.members.push({\n            key: this.state.form.members.length,\n            value: ''\n        });\n    }\n  \n    onAltNameChange(index, value) {\n        this.state.form.altnames[index].value = value;\n        //this.setState({ value: this.state.form.altnames[index].value })\n        this.forceUpdate();\n    }\n\n    onMemberChange(index, value) {\n        this.state.form.members[index].value = value;\n        //this.setState({ value: this.state.form.members[index].value });\n    }\n    */\n\n    /*\n    render() {\n        const activeName = \"1\";\n        return (\n            <Collapse value={activeName} accordion>\n                <Collapse.Item title=\"Company\" name=\"1\">\n                    <Form ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"100\" className=\"demo-dynamic\"> \n                        <Form.Item>\n                            <div>State</div>\n                            <Input disabled placeholder=\"Delaware\" value=\"Delaware\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <div>Type</div>\n                            <Input disabled placeholder=\"LLC\" value=\"LLC\" />\n                        </Form.Item>\n                        <Form.Item\n                            label={`Company name`}\n                            rules={{\n                                type: 'object', required: true,\n                                fields: {\n                                    value: { \n                                        required: true, \n                                        message: 'You must name your LLC', \n                                        trigger: 'blur' \n                                    }\n                                }\n                            }}>\n                            <Input />\n                        </Form.Item>\n                        {\n                            this.state.form.altnames.map((altname, index) => {\n                                return (\n                                    <Form.Item\n                                        key={index}\n                                        label={`Alternative name ${index + 1}`}\n                                        prop={`altnames:${index}`}\n                                        rules={{\n                                            type: 'object', required: true,\n                                            fields: {\n                                                value: { \n                                                    required: true, \n                                                    message: 'You must add at least one alternate name', \n                                                    trigger: 'blur' \n                                                }\n                                            }\n                                        }}\n                                    >\n                                        <Input \n                                            value={altname.value} \n                                            onChange={this.onAltNameChange.bind(this, index)}>\n                                        </Input>\n                                        <Button \n                                            onClick={this.removeAltName.bind(this, altname)}>\n                                            Delete\n                                        </Button>\n                                    </Form.Item>\n                                )\n                            })\n                        }\n                        <Form.Item>\n                            <Button \n                                type=\"primary\" \n                                onClick={this.handleSubmit.bind(this)}>\n                                Submit\n                            </Button>\n                            <Button \n                                onClick={this.addAltName.bind(this)}>\n                                New name\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Collapse.Item>\n                <Collapse.Item title=\"Contact\" name=\"2\">\n                    <Form>\n                        <Layout.Row>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input \n                                        placeholder=\"First name\" prepend={\n                                            <Select value=\"\" placeholder=\"Select\"> {\n                                                [\n                                                    'Mr.', \n                                                    'Ms.', \n                                                    'Mrs.',\n                                                    'Dr.',\n                                                    'Prof.'\n                                                ].map((item, index) => \n                                                    <Select.Option \n                                                        key={index} \n                                                        label={item} \n                                                        value={index} \n                                                    />\n                                                )\n                                            }\n                                            </Select>\n                                        } \n                                    />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input placeholder='Last name' gutter=\"20\" />\n                                </Form.Item>                                     \n                            </Layout.Col>\n                        </Layout.Row>\n                        <Layout.Row>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='email' placeholder=\"Email address\" append={\n                                        <Select value=''> {\n                                            [\n                                                \".com\",\n                                                \".net\",\n                                                \".edu\",\n                                                \".gov\"\n                                            ].map((item, index) => \n                                                <Select.Option \n                                                    key={index} \n                                                    label={item} \n                                                    value={index} \n                                                />\n                                            )\n                                        } </Select>\n                                    } />\n                                </Form.Item>           \n                            </Layout.Col> \n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='number' placeholder=\"Phone number\" />\n                                </Form.Item>                      \n                            </Layout.Col>               \n                        </Layout.Row>\n                        <Layout.Row>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='text' placeholder=\"Street Address\" />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='12'>\n                                <Form.Item>\n                                    <Input type='text' placeholder=\"Street Address continued\" />\n                                </Form.Item>\n                            </Layout.Col>\n                        </Layout.Row>\n                        <Layout.Row>\n                            <Layout.Col span='11'>\n                                <Form.Item>\n                                    <Input type='text' placeholder=\"City\" />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='5'>\n                                <Form.Item>\n                                    <Select value={this.state.value}> {\n                                        this.state.form.states.map(el => {\n                                            return  <Select.Option \n                                                        key={el.value} \n                                                        label={el.label} \n                                                        value={el.value} \n                                                    />\n                                        })\n                                    } </Select>\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span=\"8\">\n                                <Form.Item>\n                                    <Input placeholder=\"Zip Code\" />\n                                </Form.Item>\n                            </Layout.Col>\n                            <Layout.Col span='24'>\n                                <Form.Item>\n                                    <Select value={ this.state.value }> {\n                                        this.state.form.country.map(item => {\n                                            return  <Select.Option\n                                                        key={item.value}\n                                                        label={item.label}\n                                                        value={item.label}\n                                                    />\n                                        })\n                                    } </Select>\n                                </Form.Item>\n                            </Layout.Col>\n                        </Layout.Row>\n                    </Form>\n                </Collapse.Item>\n                <Collapse.Item title=\"Legal Parties\" name=\"3\">\n                    <Form ref=\"form\" model={this.state.form} rules={this.state.rules}>\n                        {\n                            this.state.form.members.map((member, index) => {\n                                return (\n                                    <Form.Item\n                                        key={index}\n                                        label={`Member name ${index + 1}`}\n                                  \n                                        rules={{\n                                            type: 'object', required: true,\n                                            fields: {\n                                                value: { \n                                                    required: true, \n                                                    message: 'You must add at least one member', \n                                                    trigger: 'blur' \n                                                }\n                                            }\n                                        }}\n                                    >\n                                        <Input \n                                            value={member.value} \n                                            onChange={this.onMemberChange.bind(this, index)}>\n                                        </Input>\n                                        <Button \n                                            onClick={this.removeMember.bind(this, member)}>\n                                            Delete\n                                        </Button>\n                                    </Form.Item>\n                                )\n                            })\n                        }\n                        <Form.Item>\n                            <Button \n                                type=\"primary\" \n                                onClick={this.handleSubmit.bind(this)}>\n                                Submit\n                            </Button>\n                            <Button \n                                onClick={this.addMember.bind(this)}>\n                                New name\n                            </Button>\n                        </Form.Item>                \n                    </Form>\n                </Collapse.Item>\n            </Collapse>\n        )\n    }\n    */\n"]},"metadata":{},"sourceType":"module"}