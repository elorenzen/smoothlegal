{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes } from '../../libs';\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Button.prototype.onClick = function onClick(e) {\n    if (!this.props.loading) {\n      this.props.onClick && this.props.onClick(e);\n    }\n  };\n\n  Button.prototype.render = function render() {\n    return React.createElement('button', {\n      style: this.style(),\n      className: this.className('el-button', this.props.type && 'el-button--' + this.props.type, this.props.size && 'el-button--' + this.props.size, {\n        'is-disabled': this.props.disabled,\n        'is-loading': this.props.loading,\n        'is-plain': this.props.plain\n      }),\n      disabled: this.props.disabled,\n      type: this.props.nativeType,\n      onClick: this.onClick.bind(this)\n    }, this.props.loading && React.createElement('i', {\n      className: 'el-icon-loading'\n    }), this.props.icon && !this.props.loading && React.createElement('i', {\n      className: 'el-icon-' + this.props.icon\n    }), React.createElement('span', null, this.props.children));\n  };\n\n  return Button;\n}(Component);\n\nexport default Button;\nButton.propTypes = {\n  onClick: PropTypes.func,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  icon: PropTypes.string,\n  nativeType: PropTypes.string,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  plain: PropTypes.bool\n};\nButton.defaultProps = {\n  type: 'default',\n  nativeType: 'button',\n  loading: false,\n  disabled: false,\n  plain: false\n};","map":null,"metadata":{},"sourceType":"module"}