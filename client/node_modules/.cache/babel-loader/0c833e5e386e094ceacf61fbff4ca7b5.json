{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes } from '../../libs';\n\nvar Collapse = function (_Component) {\n  _inherits(Collapse, _Component);\n\n  function Collapse(props) {\n    _classCallCheck(this, Collapse);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      activeNames: [].concat(_this.props.value)\n    };\n    return _this;\n  }\n\n  Collapse.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setActiveNames(nextProps.value);\n  };\n\n  Collapse.prototype.setActiveNames = function setActiveNames(activeNames) {\n    var _this2 = this;\n\n    activeNames = [].concat(activeNames);\n    this.setState({\n      activeNames: activeNames\n    }, function () {\n      return _this2.props.onChange(activeNames);\n    });\n  };\n\n  Collapse.prototype.handleItemClick = function handleItemClick(name) {\n    var activeNames = this.state.activeNames;\n\n    if (this.props.accordion) {\n      this.setActiveNames(activeNames[0] && activeNames[0] === name ? '' : name);\n    } else {\n      if (activeNames.includes(name)) {\n        this.setActiveNames(activeNames.filter(function (item) {\n          return item !== name;\n        }));\n      } else {\n        this.setActiveNames(activeNames.concat(name));\n      }\n    }\n  };\n\n  Collapse.prototype.render = function render() {\n    var _this3 = this;\n\n    var content = React.Children.map(this.props.children, function (child, idx) {\n      var name = child.props.name || idx.toString();\n      return React.cloneElement(child, {\n        isActive: _this3.state.activeNames.includes(name),\n        key: idx,\n        name: name,\n        onClick: function onClick(item) {\n          return _this3.handleItemClick(item);\n        }\n      });\n    });\n    return React.createElement('div', {\n      className: 'el-collapse'\n    }, content);\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.defaultProps = {\n  value: [],\n  onChange: function onChange() {}\n};\nexport default Collapse;\nCollapse.propTypes = {\n  accordion: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  onChange: PropTypes.func\n};","map":null,"metadata":{},"sourceType":"module"}