{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nvar Component = function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component() {\n    _classCallCheck(this, Component);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Component.prototype.classNames = function classNames() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return classnames(args);\n  };\n\n  Component.prototype.className = function className() {\n    var className = this.props.className;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return this.classNames.apply(this, args.concat([className]));\n  };\n\n  Component.prototype.style = function style(args) {\n    var style = this.props.style;\n    return Object.assign({}, args, style);\n  };\n\n  return Component;\n}(React.Component);\n\nexport default Component;\nComponent.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object\n};","map":null,"metadata":{},"sourceType":"module"}