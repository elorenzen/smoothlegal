{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes, Transition, View } from '../../libs';\n\nvar Tag = function (_Component) {\n  _inherits(Tag, _Component);\n\n  function Tag(props) {\n    _classCallCheck(this, Tag);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      visible: true\n    };\n    return _this;\n  }\n\n  Tag.prototype.handleClose = function handleClose() {\n    var _this2 = this;\n\n    this.setState({\n      visible: false\n    }, function () {\n      if (_this2.props.onClose) {\n        _this2.props.onClose();\n      }\n    });\n  };\n\n  Tag.prototype.render = function render() {\n    var _props = this.props,\n        type = _props.type,\n        hit = _props.hit,\n        closable = _props.closable,\n        closeTransition = _props.closeTransition,\n        color = _props.color;\n    return React.createElement(Transition, {\n      name: closeTransition ? '' : 'el-zoom-in-center'\n    }, React.createElement(View, {\n      key: this.state.visible,\n      show: this.state.visible\n    }, React.createElement('span', {\n      style: this.style({\n        backgroundColor: color\n      }),\n      className: this.className('el-tag', type && 'el-tag--' + type, {\n        'is-hit': hit\n      })\n    }, this.props.children, closable && React.createElement('i', {\n      className: 'el-tag__close el-icon-close',\n      onClick: this.handleClose.bind(this)\n    }))));\n  };\n\n  return Tag;\n}(Component);\n\nexport default Tag;\nTag.propTypes = {\n  closable: PropTypes.bool,\n  type: PropTypes.string,\n  hit: PropTypes.bool,\n  color: PropTypes.string,\n  closeTransition: PropTypes.bool,\n  onClose: PropTypes.func\n};","map":null,"metadata":{},"sourceType":"module"}