{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes, Transition, View } from '../../libs';\nimport icons from './assets';\n\nvar Toast = function (_Component) {\n  _inherits(Toast, _Component);\n\n  function Toast(props) {\n    _classCallCheck(this, Toast);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  Toast.prototype.componentDidMount = function componentDidMount() {\n    this.setState({\n      visible: true\n    });\n    this.startTimer();\n  };\n\n  Toast.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.stopTimer();\n  };\n\n  Toast.prototype.onClose = function onClose() {\n    this.stopTimer();\n    this.setState({\n      visible: false\n    });\n  };\n\n  Toast.prototype.startTimer = function startTimer() {\n    var _this2 = this;\n\n    if (this.props.duration > 0) {\n      this.timeout = setTimeout(function () {\n        _this2.onClose();\n      }, this.props.duration);\n    }\n  };\n\n  Toast.prototype.stopTimer = function stopTimer() {\n    clearTimeout(this.timeout);\n  };\n\n  Toast.prototype.render = function render() {\n    var _this3 = this;\n\n    var _props = this.props,\n        iconClass = _props.iconClass,\n        customClass = _props.customClass;\n    return React.createElement(Transition, {\n      name: 'el-message-fade',\n      onAfterLeave: function onAfterLeave() {\n        _this3.props.willUnmount();\n      }\n    }, React.createElement(View, {\n      show: this.state.visible\n    }, React.createElement('div', {\n      className: this.classNames('el-message', customClass),\n      onMouseEnter: this.stopTimer.bind(this),\n      onMouseLeave: this.startTimer.bind(this)\n    }, !iconClass && React.createElement('img', {\n      className: 'el-message__img',\n      src: icons[this.props.type]\n    }), React.createElement('div', {\n      className: this.classNames('el-message__group', {\n        'is-with-icon': iconClass\n      })\n    }, iconClass && React.createElement('i', {\n      className: this.classNames('el-message__icon', iconClass)\n    }), React.createElement('p', null, this.props.message), this.props.showClose && React.createElement('div', {\n      className: 'el-message__closeBtn el-icon-close',\n      onClick: this.onClose.bind(this)\n    })))));\n  };\n\n  return Toast;\n}(Component);\n\nexport default Toast;\nToast.propTypes = {\n  type: PropTypes.oneOf(['success', 'warning', 'info', 'error']),\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  duration: PropTypes.number,\n  showClose: PropTypes.bool,\n  customClass: PropTypes.string,\n  iconClass: PropTypes.string\n};\nToast.defaultProps = {\n  type: 'info',\n  duration: 3000,\n  showClose: false\n};","map":null,"metadata":{},"sourceType":"module"}