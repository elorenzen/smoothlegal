{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes } from '../../libs';\n\nvar Form = function (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    _classCallCheck(this, Form);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      fields: []\n    };\n    return _this;\n  }\n\n  Form.prototype.getChildContext = function getChildContext() {\n    return {\n      component: this\n    };\n  };\n\n  Form.prototype.addField = function addField(field) {\n    this.state.fields.push(field);\n  };\n\n  Form.prototype.removeField = function removeField(field) {\n    if (field.props.prop) {\n      this.state.fields.splice(this.state.fields.indexOf(field), 1);\n    }\n  };\n\n  Form.prototype.resetFields = function resetFields() {\n    this.state.fields.forEach(function (field) {\n      field.resetField();\n    });\n  };\n\n  Form.prototype.validate = function validate(callback) {\n    var _this2 = this;\n\n    var valid = true;\n    var count = 0; // 如果需要验证的fields为空，调用验证时立刻返回callback\n\n    if (this.state.fields.length === 0 && callback) {\n      callback(true);\n    }\n\n    this.state.fields.forEach(function (field) {\n      field.validate('', function (errors) {\n        if (errors) {\n          valid = false;\n        }\n\n        if (typeof callback === 'function' && ++count === _this2.state.fields.length) {\n          callback(valid);\n        }\n      });\n    });\n  };\n\n  Form.prototype.validateField = function validateField(prop, cb) {\n    var field = this.state.fields.filter(function (field) {\n      return field.props.prop === prop;\n    })[0];\n\n    if (!field) {\n      throw new Error('must call validateField with valid prop string!');\n    }\n\n    field.validate('', cb);\n  };\n\n  Form.prototype.render = function render() {\n    return React.createElement('form', {\n      style: this.style(),\n      className: this.className('el-form', this.props.labelPosition && 'el-form--label-' + this.props.labelPosition, {\n        'el-form--inline': this.props.inline\n      }),\n      onSubmit: this.props.onSubmit\n    }, this.props.children);\n  };\n\n  return Form;\n}(Component);\n\nexport default Form;\nForm.childContextTypes = {\n  component: PropTypes.any\n};\nForm.propTypes = {\n  model: PropTypes.object,\n  rules: PropTypes.object,\n  labelPosition: PropTypes.oneOf(['right', 'left', 'top']),\n  labelWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  labelSuffix: PropTypes.string,\n  inline: PropTypes.bool,\n  onSubmit: PropTypes.func\n};\nForm.defaultProps = {\n  labelPosition: 'right',\n  labelSuffix: ''\n};","map":null,"metadata":{},"sourceType":"module"}