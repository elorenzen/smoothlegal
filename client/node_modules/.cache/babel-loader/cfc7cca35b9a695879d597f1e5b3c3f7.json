{"ast":null,"code":"var _jsxFileName = \"/Users/ericlorenzen/smoothlegal/smoothlegal/client/src/components/CheckoutForm.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport { Button } from 'element-react/next';\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      complete: false\n    };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(event) {\n    let response = await fetch(\"/charge\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: token.id\n    });\n\n    let _ref = await this.props.stripe.createToken({\n      name: \"Name\"\n    }).then(({\n      token,\n      error\n    }) => {\n      if (error) {\n        console.log('Could not create token to submit charge');\n        console.log(error);\n      } else {\n        if (response.ok) {\n          this.setState({\n            complete: true\n          });\n          console.log(\"Purchase Complete!\");\n          console.log(response);\n        }\n      }\n    }),\n        token = _ref.token;\n  }\n\n  render() {\n    if (this.state.complete) return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Purchase Complete\");\n    return React.createElement(\"div\", {\n      className: \"checkout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(CardElement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Confirm order\"));\n  }\n\n}\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/Users/ericlorenzen/smoothlegal/smoothlegal/client/src/components/CheckoutForm.js"],"names":["React","Component","CardElement","injectStripe","Button","CheckoutForm","constructor","props","state","complete","submit","bind","event","response","fetch","method","headers","body","token","id","stripe","createToken","name","then","error","console","log","ok","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,uBAAxC;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAGA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAED,QAAMD,MAAN,CAAaE,KAAb,EAAoB;AAChB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFyB;AAGlCC,MAAAA,IAAI,EAAEC,KAAK,CAACC;AAHsB,KAAZ,CAA1B;;AADgB,eAMF,MAAM,KAAKZ,KAAL,CAAWa,MAAX,CAAkBC,WAAlB,CAA8B;AAACC,MAAAA,IAAI,EAAE;AAAP,KAA9B,EAA8CC,IAA9C,CAAmD,CAAC;AAACL,MAAAA,KAAD;AAAQM,MAAAA;AAAR,KAAD,KAAoB;AACzF,UAAGA,KAAH,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAHD,MAGM;AACJ,YAAIX,QAAQ,CAACc,EAAb,EAAiB;AACf,eAAKC,QAAL,CAAc;AAAEnB,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACAgB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACH;AACF;AACA,KAXmB,CANJ;AAAA,QAMXK,KANW,QAMXA,KANW;AAmBnB;;AAEDW,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKrB,KAAL,CAAWC,QAAf,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AAEzB,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADJ;AAMH;;AAtCgC;;AAyCrC,eAAeP,YAAY,CAACE,YAAD,CAA3B","sourcesContent":["import React, {Component} from 'react';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport { Button } from 'element-react/next';\n\n\nclass CheckoutForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {complete: false};\n        this.submit = this.submit.bind(this);\n    }\n\n    async submit(event) {\n        let response = await fetch(\"/charge\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"text/plain\"},\n            body: token.id\n        });\n        let {token} = await this.props.stripe.createToken({name: \"Name\"}).then(({token, error}) => {\n          if(error) {\n            console.log('Could not create token to submit charge')\n            console.log(error)\n          } else{\n            if (response.ok) {\n              this.setState({ complete: true });\n              console.log(\"Purchase Complete!\");\n              console.log(response);\n          }\n        }\n        });\n    \n    }\n    \n    render() {\n\n        if (this.state.complete) return <h1>Purchase Complete</h1>;\n\n        return (\n            <div className='checkout'>\n              <CardElement />\n              <Button onClick={this.submit}>Confirm order</Button>\n            </div>\n        );\n    }\n}\n\nexport default injectStripe(CheckoutForm);"]},"metadata":{},"sourceType":"module"}