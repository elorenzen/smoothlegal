{"ast":null,"code":"import { require_condition } from './assert';\nimport * as ReactUtils from './react';\nimport * as Errors from './errors';\nexport { require_condition, ReactUtils, Errors };\nexport function watchPropertyChange(target, property, cb) {\n  require_condition(target != null && typeof property === 'string' && typeof cb === 'function', 'invalid arguments');\n  var cache = null;\n\n  if (!target.__watch_cache) {\n    target.__watch_cache = {};\n  }\n\n  cache = target.__watch_cache;\n  require_condition(cache[property] == null, 'duplicated watch on ' + target + ' \\'s ' + property);\n  cache[property] = cb;\n  var origin = target[property];\n  Object.defineProperty(target, property, {\n    configurable: true,\n    get: function get() {\n      return origin;\n    },\n    set: function set(value) {\n      origin = value;\n\n      if (cache[property]) {\n        cache[property](origin);\n      }\n    }\n  });\n  return function () {\n    if (target.__watch_cache && target.__watch_cache[property]) {\n      delete target.__watch_cache[property];\n      delete target[property];\n      target[property] = origin;\n    }\n  };\n}\nexport function createPropType(validate) {\n  // Chainable isRequired\n  function checkType(isRequired, props, propName, componentName) {\n    componentName = componentName || '<<anonymous>>';\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error(\"Required `\" + propName + \"` was not specified in \" + (\"`\" + componentName + \"`.\"));\n      }\n\n      return null;\n    } else {\n      return validate(props, propName, componentName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n} // take from :  http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n\nexport function hashCode(str) {\n  if (str == null || str.length === 0) return 0;\n  var hash = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  return hash;\n}\nexport function pick(obj, keys) {\n  require_condition(obj != null && Array.isArray(keys));\n  var r = {};\n  keys.forEach(function (e) {\n    return r[e] = obj[e];\n  });\n  return r;\n}\nexport function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\nexport { default as DateUtils } from './date';\nexport * from './popper-mixins';\nexport { IDGenerator } from './IDGenerator';","map":null,"metadata":{},"sourceType":"module"}