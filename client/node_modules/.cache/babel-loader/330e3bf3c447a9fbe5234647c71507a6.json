{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { PropTypes } from '../../libs';\nimport MixinComponent from './MixinComponent';\n\nvar MenuItem = function (_MixinComponent) {\n  _inherits(MenuItem, _MixinComponent);\n\n  function MenuItem(props) {\n    _classCallCheck(this, MenuItem);\n\n    var _this = _possibleConstructorReturn(this, _MixinComponent.call(this, props));\n\n    _this.instanceType = 'MenuItem';\n    return _this;\n  }\n\n  MenuItem.prototype.componentDidMount = function componentDidMount() {\n    this.rootMenu().state.menuItems[this.props.index] = this;\n  };\n\n  MenuItem.prototype.handleClick = function handleClick() {\n    this.rootMenu().handleSelect(this.props.index, this.indexPath(), this);\n  };\n\n  MenuItem.prototype.active = function active() {\n    return this.props.index === this.rootMenu().state.activeIndex;\n  };\n\n  MenuItem.prototype.render = function render() {\n    return React.createElement('li', {\n      style: this.style(),\n      className: this.className(\"el-menu-item\", {\n        'is-active': this.active(),\n        'is-disabled': this.props.disabled\n      }),\n      onClick: this.handleClick.bind(this)\n    }, this.props.children);\n  };\n\n  return MenuItem;\n}(MixinComponent);\n\nexport default MenuItem;\nMenuItem.propTypes = {\n  index: PropTypes.string.isRequired,\n  disabled: PropTypes.bool\n};","map":null,"metadata":{},"sourceType":"module"}