{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes } from '../../libs';\n\nvar Cover = function (_Component) {\n  _inherits(Cover, _Component);\n\n  function Cover(props) {\n    _classCallCheck(this, Cover);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      dragOver: false\n    };\n    return _this;\n  }\n\n  Cover.prototype.handleDragover = function handleDragover(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.setState({\n        dragOver: true\n      });\n    }\n  };\n\n  Cover.prototype.handleDragleave = function handleDragleave(e) {\n    e.preventDefault();\n    this.setState({\n      dragOver: false\n    });\n  };\n\n  Cover.prototype.onDrop = function onDrop(e) {\n    if (this.props.disabled) return;\n    e.preventDefault();\n    this.setState({\n      dragOver: false\n    });\n    this.props.onFile(e.dataTransfer.files);\n  };\n\n  Cover.prototype.render = function render() {\n    var _this2 = this;\n\n    var dragOver = this.state.dragOver;\n    return React.createElement('div', {\n      className: this.classNames({\n        'el-upload-dragger': true,\n        'is-dragover': dragOver\n      }),\n      onDrop: function onDrop(e) {\n        return _this2.onDrop(e);\n      },\n      onDragOver: function onDragOver(e) {\n        return _this2.handleDragover(e);\n      },\n      onDragLeave: function onDragLeave(e) {\n        return _this2.handleDragleave(e);\n      }\n    }, this.props.children);\n  };\n\n  return Cover;\n}(Component);\n\nCover.defaultProps = {\n  onFile: Function\n};\nexport default Cover;\nCover.propTypes = {\n  onFile: PropTypes.func,\n  disabled: PropTypes.bool\n};","map":null,"metadata":{},"sourceType":"module"}