{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PropTypes, Component } from '../../libs';\nimport { addResizeListener, removeResizeListener } from '../../libs/utils/resize-event';\nimport { getScrollBarWidth } from './scrollbar-width';\nimport { Bar } from './Bar';\nexport var Scrollbar = function (_Component) {\n  _inherits(Scrollbar, _Component);\n\n  function Scrollbar(props) {\n    _classCallCheck(this, Scrollbar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      sizeWidth: '0',\n      sizeHeight: '0',\n      moveX: 0,\n      moveY: 0\n    };\n    _this.update = _this._update.bind(_this);\n    return _this;\n  }\n\n  Scrollbar.prototype.componentDidMount = function componentDidMount() {\n    if (this.native) return;\n    var rafId = requestAnimationFrame(this.update);\n\n    this.cleanRAF = function () {\n      cancelAnimationFrame(rafId);\n    };\n  };\n\n  Scrollbar.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    this.resizeDom = ReactDOM.findDOMNode(this.refs.resize);\n\n    if (!this.props.noresize) {\n      this.cleanResize && this.cleanResize();\n      addResizeListener(this.resizeDom, this.update);\n\n      this.cleanResize = function () {\n        removeResizeListener(_this2.resizeDom, _this2.update);\n      };\n    }\n  };\n\n  Scrollbar.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.cleanRAF();\n    this.cleanResize && this.cleanResize();\n  };\n\n  Scrollbar.prototype.handleScroll = function handleScroll() {\n    var wrap = this.wrap;\n    this.setState({\n      moveY: wrap.scrollTop * 100 / wrap.clientHeight,\n      moveX: wrap.scrollLeft * 100 / wrap.clientWidth\n    });\n  };\n\n  Scrollbar.prototype._update = function _update() {\n    var heightPercentage = void 0,\n        widthPercentage = void 0;\n    var wrap = this.wrap;\n    if (!wrap) return;\n    heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;\n    widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;\n    var sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : '';\n    var sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : '';\n    this.setState({\n      sizeHeight: sizeHeight,\n      sizeWidth: sizeWidth\n    });\n  };\n\n  Scrollbar.prototype.render = function render() {\n    var _this3 = this;\n    /* eslint-disable */\n\n\n    var _props = this.props,\n        native = _props.native,\n        viewStyle = _props.viewStyle,\n        wrapStyle = _props.wrapStyle,\n        viewClass = _props.viewClass,\n        children = _props.children,\n        viewComponent = _props.viewComponent,\n        wrapClass = _props.wrapClass,\n        noresize = _props.noresize,\n        className = _props.className,\n        others = _objectWithoutProperties(_props, ['native', 'viewStyle', 'wrapStyle', 'viewClass', 'children', 'viewComponent', 'wrapClass', 'noresize', 'className']);\n\n    var _state = this.state,\n        moveX = _state.moveX,\n        moveY = _state.moveY,\n        sizeWidth = _state.sizeWidth,\n        sizeHeight = _state.sizeHeight;\n    /* eslint-enable */\n\n    var style = wrapStyle;\n    var gutter = getScrollBarWidth();\n\n    if (gutter) {\n      var gutterWith = '-' + gutter + 'px';\n\n      if (Array.isArray(wrapStyle)) {\n        style = Object.assign.apply(null, [].concat(wrapStyle, [{\n          marginRight: gutterWith,\n          marginBottom: gutterWith\n        }]));\n      } else {\n        style = Object.assign({}, wrapStyle, {\n          marginRight: gutterWith,\n          marginBottom: gutterWith\n        });\n      }\n    }\n\n    var view = React.createElement(viewComponent, {\n      className: this.classNames('el-scrollbar__view', viewClass),\n      style: viewStyle,\n      ref: 'resize'\n    }, children);\n    var nodes = void 0;\n\n    if (!native) {\n      var wrap = React.createElement('div', _extends({}, others, {\n        ref: 'wrap',\n        key: 0,\n        style: style,\n        onScroll: this.handleScroll.bind(this),\n        className: this.classNames(wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default')\n      }), view);\n      nodes = [wrap, React.createElement(Bar, {\n        key: 1,\n        move: moveX,\n        size: sizeWidth,\n        getParentWrap: function getParentWrap() {\n          return _this3.wrap;\n        }\n      }), React.createElement(Bar, {\n        key: 2,\n        move: moveY,\n        size: sizeHeight,\n        getParentWrap: function getParentWrap() {\n          return _this3.wrap;\n        },\n        vertical: true\n      })];\n    } else {\n      nodes = [React.createElement('div', _extends({}, others, {\n        key: 0,\n        ref: 'wrap',\n        className: this.classNames(wrapClass, 'el-scrollbar__wrap'),\n        style: style\n      }), view)];\n    }\n\n    return React.createElement('div', {\n      className: this.classNames('el-scrollbar', className)\n    }, nodes);\n  };\n\n  _createClass(Scrollbar, [{\n    key: 'wrap',\n    get: function get() {\n      return this.refs.wrap;\n    }\n  }]);\n\n  return Scrollbar;\n}(Component);\nScrollbar.propTypes = {\n  native: PropTypes.bool,\n  wrapStyle: PropTypes.object,\n  wrapClass: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  viewClass: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  viewStyle: PropTypes.object,\n  className: PropTypes.string,\n  viewComponent: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  noresize: PropTypes.bool\n};\nScrollbar.defaultProps = {\n  viewComponent: 'div'\n};","map":null,"metadata":{},"sourceType":"module"}