{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport { ExtendableError } from './errors';\n\nvar ErrorConditionFailed = function (_ExtendableError) {\n  _inherits(ErrorConditionFailed, _ExtendableError);\n\n  function ErrorConditionFailed() {\n    _classCallCheck(this, ErrorConditionFailed);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(this, _ExtendableError.call(this, args));\n  }\n\n  return ErrorConditionFailed;\n}(ExtendableError);\n\nexport function require_condition(condition) {\n  var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'pre-condition failed';\n\n  if (!condition) {\n    throw new ErrorConditionFailed(msg);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}