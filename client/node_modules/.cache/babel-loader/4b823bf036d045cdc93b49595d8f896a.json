{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { PropTypes } from '../../libs';\nimport BasePicker from './BasePicker';\nimport TimeSelectPanel from './panel/TimeSelectPanel';\n\nvar TimeSelect = function (_BasePicker) {\n  _inherits(TimeSelect, _BasePicker);\n\n  _createClass(TimeSelect, null, [{\n    key: 'propTypes',\n    get: function get() {\n      var result = Object.assign({}, {\n        start: PropTypes.string,\n        end: PropTypes.string,\n        step: PropTypes.string,\n        minTime: PropTypes.instanceOf(Date)\n      }, BasePicker.propTypes);\n      return result;\n    }\n  }, {\n    key: 'defaultProps',\n    get: function get() {\n      var result = Object.assign({}, BasePicker.defaultProps);\n      return result;\n    }\n  }]);\n\n  function TimeSelect(props) {\n    _classCallCheck(this, TimeSelect); // props, type, state\n\n\n    return _possibleConstructorReturn(this, _BasePicker.call(this, props, 'timeselect', {}));\n  }\n\n  TimeSelect.prototype.isDateValid = function isDateValid(value) {\n    return _BasePicker.prototype.isDateValid.call(this, value) && TimeSelectPanel.isValid(this.dateToStr(value), this.panelProps());\n  };\n\n  TimeSelect.prototype.panelProps = function panelProps(props) {\n    var ps = props || this.props;\n    var minTime = this.dateToStr(this.props.minTime);\n    return _extends({}, ps, {\n      minTime: minTime\n    });\n  };\n\n  TimeSelect.prototype.pickerPanel = function pickerPanel(state, props) {\n    var _this2 = this;\n\n    var value = this.dateToStr(state.value);\n    return React.createElement(TimeSelectPanel, _extends({}, this.panelProps(props), {\n      value: value,\n      onPicked: this.onPicked.bind(this),\n      dateParser: function dateParser(str) {\n        var r = _this2.parseDate(str);\n\n        return r;\n      }\n    }));\n  };\n\n  return TimeSelect;\n}(BasePicker);\n\nexport default TimeSelect;","map":null,"metadata":{},"sourceType":"module"}