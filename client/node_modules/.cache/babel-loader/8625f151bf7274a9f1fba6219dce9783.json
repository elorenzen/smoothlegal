{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { Component, PropTypes } from '../../libs';\nimport { getValueByPath } from \"./utils\";\nimport Checkbox from '../checkbox';\nimport Tag from '../tag';\n\nvar TableFooter = function (_Component) {\n  _inherits(TableFooter, _Component);\n\n  function TableFooter() {\n    _classCallCheck(this, TableFooter);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  TableFooter.prototype.isCellHidden = function isCellHidden(index, columns) {\n    var fixed = this.props.fixed;\n\n    if (fixed === true || fixed === 'left') {\n      return index >= this.leftFixedCount;\n    } else if (fixed === 'right') {\n      var before = 0;\n\n      for (var i = 0; i < index; i++) {\n        before += columns[i].colSpan;\n      }\n\n      return before < this.columnsCount - this.rightFixedCount;\n    } else {\n      return index < this.leftFixedCount || index >= this.columnsCount - this.rightFixedCount;\n    }\n  };\n\n  TableFooter.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        tableStoreState = _props.tableStoreState,\n        layout = _props.layout,\n        fixed = _props.fixed,\n        summaryMethod = _props.summaryMethod,\n        sumText = _props.sumText;\n    var sums = summaryMethod ? summaryMethod(tableStoreState.columns, tableStoreState.data) : tableStoreState.columns.map(function (column, index) {\n      if (index === 0) {\n        return sumText;\n      }\n\n      var result = tableStoreState.data.reduce(function (pre, data) {\n        return pre + parseFloat(getValueByPath(data, column.property));\n      }, 0);\n      return isNaN(result) ? '' : result;\n    });\n    return React.createElement('table', {\n      className: 'el-table__footer',\n      cellSpacing: '0',\n      cellPadding: '0',\n      style: this.style({\n        borderSpacing: 0,\n        border: 0\n      })\n    }, React.createElement('colgroup', null, tableStoreState.columns.map(function (column, index) {\n      return React.createElement('col', {\n        width: column.realWidth,\n        style: {\n          width: column.realWidth\n        },\n        key: index\n      });\n    }), !fixed && React.createElement('col', {\n      width: layout.scrollY ? layout.gutterWidth : 0,\n      style: {\n        width: layout.scrollY ? layout.gutterWidth : 0\n      }\n    })), React.createElement('tbody', null, React.createElement('tr', null, tableStoreState.columns.map(function (column, index) {\n      return React.createElement('td', {\n        key: index,\n        colSpan: column.colSpan,\n        rowSpan: column.rowSpan,\n        className: _this2.className(column.headerAlign, column.className, column.labelClassName, column.columnKey, {\n          'is-hidden': _this2.isCellHidden(index, tableStoreState.columns),\n          'is-leaf': !column.subColumns\n        })\n      }, React.createElement('div', {\n        className: 'cell'\n      }, sums[index]));\n    }), !fixed && React.createElement('td', {\n      className: 'gutter',\n      style: {\n        width: layout.scrollY ? layout.gutterWidth : 0\n      }\n    }))));\n  };\n\n  _createClass(TableFooter, [{\n    key: 'columnsCount',\n    get: function get() {\n      return this.props.tableStoreState.columns.length;\n    }\n  }, {\n    key: 'leftFixedCount',\n    get: function get() {\n      return this.props.tableStoreState.fixedColumns.length;\n    }\n  }, {\n    key: 'rightFixedCount',\n    get: function get() {\n      return this.props.tableStoreState.rightFixedColumns.length;\n    }\n  }]);\n\n  return TableFooter;\n}(Component);\n\nexport default TableFooter;","map":null,"metadata":{},"sourceType":"module"}