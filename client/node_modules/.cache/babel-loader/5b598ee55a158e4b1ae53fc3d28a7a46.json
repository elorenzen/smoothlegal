{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport CheckBox from './CheckBox';\n\nvar CheckboxButton = function (_CheckBox) {\n  _inherits(CheckboxButton, _CheckBox);\n\n  function CheckboxButton() {\n    _classCallCheck(this, CheckboxButton);\n\n    return _possibleConstructorReturn(this, _CheckBox.apply(this, arguments));\n  }\n\n  CheckboxButton.prototype.render = function render() {\n    var group = this.context.ElCheckboxGroup;\n    return React.createElement('label', {\n      style: this.style(),\n      className: this.className('el-checkbox-button', group.props.size ? 'el-checkbox-button--' + group.props.size : '', {\n        'is-disabled': this.props.disabled,\n        'is-checked': this.state.checked,\n        'is-focus': this.state.focus\n      })\n    }, React.createElement('input', {\n      className: 'el-checkbox-button__original',\n      type: 'checkbox',\n      checked: this.state.checked,\n      disabled: this.props.disabled,\n      onFocus: this.onFocus.bind(this),\n      onBlur: this.onBlur.bind(this),\n      onChange: this.onChange.bind(this)\n    }), React.createElement('span', {\n      className: 'el-checkbox-button__inner',\n      style: this.state.checked ? {\n        boxShadow: '-1px 0 0 0 ' + group.props.fill,\n        backgroundColor: group.props.fill || '',\n        borderColor: group.props.fill || '',\n        color: group.props.textColor || ''\n      } : {}\n    }, this.state.label || this.props.children));\n  };\n\n  return CheckboxButton;\n}(CheckBox);\n\nCheckboxButton.elementType = 'CheckboxButton';\nexport default CheckboxButton;","map":null,"metadata":{},"sourceType":"module"}