{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PropTypes, View, Transition, CollapseTransition } from '../../libs';\nimport MixinComponent from './MixinComponent';\n\nvar SubMenu = function (_MixinComponent) {\n  _inherits(SubMenu, _MixinComponent);\n\n  function SubMenu(props) {\n    _classCallCheck(this, SubMenu);\n\n    var _this = _possibleConstructorReturn(this, _MixinComponent.call(this, props));\n\n    _this.instanceType = 'SubMenu';\n    _this.state = {\n      active: false\n    };\n    return _this;\n  }\n\n  SubMenu.prototype.getChildContext = function getChildContext() {\n    return {\n      component: this\n    };\n  };\n\n  SubMenu.prototype.componentDidMount = function componentDidMount() {\n    this.rootMenu().state.submenus[this.props.index] = this;\n    this.initEvents();\n  };\n\n  SubMenu.prototype.onItemSelect = function onItemSelect(index, indexPath) {\n    this.setState({\n      active: indexPath.indexOf(this.props.index) !== -1\n    });\n  };\n\n  SubMenu.prototype.handleClick = function handleClick() {\n    this.rootMenu().handleSubmenuClick(this.props.index, this.indexPath());\n  };\n\n  SubMenu.prototype.handleMouseenter = function handleMouseenter() {\n    var _this2 = this;\n\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(function () {\n      _this2.rootMenu().openMenu(_this2.props.index, _this2.indexPath());\n    }, 300);\n  };\n\n  SubMenu.prototype.handleMouseleave = function handleMouseleave() {\n    var _this3 = this;\n\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(function () {\n      _this3.rootMenu().closeMenu(_this3.props.index, _this3.indexPath());\n    }, 300);\n  };\n\n  SubMenu.prototype.initEvents = function initEvents() {\n    if (this.rootMenu().props.mode === 'horizontal' && this.rootMenu().props.menuTrigger === 'hover') {\n      var triggerElm = ReactDOM.findDOMNode(this);\n      triggerElm.addEventListener('mouseenter', this.handleMouseenter.bind(this));\n      triggerElm.addEventListener('mouseleave', this.handleMouseleave.bind(this));\n    } else {\n      var _triggerElm = this.refs['submenu-title'];\n\n      _triggerElm.addEventListener('click', this.handleClick.bind(this));\n    }\n  };\n\n  SubMenu.prototype.opened = function opened() {\n    return this.rootMenu().state.openedMenus.indexOf(this.props.index) !== -1;\n  };\n\n  SubMenu.prototype.render = function render() {\n    return React.createElement('li', {\n      style: this.style(),\n      className: this.className('el-submenu', {\n        'is-active': this.state.active,\n        'is-opened': this.opened()\n      })\n    }, React.createElement('div', {\n      ref: 'submenu-title',\n      className: 'el-submenu__title'\n    }, this.props.title, React.createElement('i', {\n      className: this.classNames('el-submenu__icon-arrow', {\n        'el-icon-arrow-down': this.rootMenu().props.mode === 'vertical',\n        'el-icon-caret-bottom': this.rootMenu().props.mode === 'horizontal'\n      })\n    })), this.rootMenu().props.mode === 'horizontal' ? React.createElement(Transition, {\n      name: 'el-zoom-in-top'\n    }, React.createElement(View, {\n      show: this.opened()\n    }, React.createElement('ul', {\n      className: 'el-menu'\n    }, this.props.children))) : React.createElement(CollapseTransition, {\n      isShow: this.opened()\n    }, React.createElement('ul', {\n      className: 'el-menu'\n    }, this.props.children)));\n  };\n\n  return SubMenu;\n}(MixinComponent);\n\nexport default SubMenu;\nSubMenu.childContextTypes = {\n  component: PropTypes.any\n};\nSubMenu.propTypes = {\n  index: PropTypes.string.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}