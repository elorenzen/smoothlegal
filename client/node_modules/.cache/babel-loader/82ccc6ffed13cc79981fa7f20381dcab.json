{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes, Transition, View } from '../../libs';\nvar TYPE_CLASSES_MAP = {\n  'success': 'el-icon-circle-check',\n  'warning': 'el-icon-warning',\n  'error': 'el-icon-circle-cross'\n};\n\nvar Alert = function (_Component) {\n  _inherits(Alert, _Component);\n\n  function Alert(props) {\n    _classCallCheck(this, Alert);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      visible: true\n    };\n    return _this;\n  }\n\n  Alert.prototype.close = function close() {\n    this.setState({\n      visible: false\n    });\n  };\n\n  Alert.prototype.onAfterLeave = function onAfterLeave() {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n\n  Alert.prototype.render = function render() {\n    return React.createElement(Transition, {\n      name: 'el-alert-fade',\n      onAfterLeave: this.onAfterLeave.bind(this)\n    }, React.createElement(View, {\n      show: this.state.visible\n    }, React.createElement('div', {\n      style: this.style(),\n      className: this.className('el-alert', 'el-alert--' + this.props.type)\n    }, this.props.showIcon && React.createElement('i', {\n      className: this.classNames('el-alert__icon', TYPE_CLASSES_MAP[this.props.type] || 'el-icon-information', {\n        'is-big': this.props.description\n      })\n    }), React.createElement('div', {\n      className: 'el-alert__content'\n    }, this.props.title && React.createElement('span', {\n      className: this.classNames('el-alert__title', {\n        'is-bold': this.props.description\n      })\n    }, this.props.title), this.props.description && React.createElement('p', {\n      className: 'el-alert__description'\n    }, this.props.description), React.createElement(View, {\n      show: this.props.closable\n    }, React.createElement('i', {\n      className: this.classNames('el-alert__closebtn', this.props.closeText ? 'is-customed' : 'el-icon-close'),\n      onClick: this.close.bind(this)\n    }, this.props.closeText))))));\n  };\n\n  return Alert;\n}(Component);\n\nexport default Alert;\nAlert.propTypes = {\n  onClose: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  type: PropTypes.string,\n  closable: PropTypes.bool,\n  closeText: PropTypes.string,\n  showIcon: PropTypes.bool\n};\nAlert.defaultProps = {\n  type: 'info',\n  closable: true\n};","map":null,"metadata":{},"sourceType":"module"}