{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes } from '../../libs';\n\nvar Badge = function (_Component) {\n  _inherits(Badge, _Component);\n\n  function Badge() {\n    _classCallCheck(this, Badge);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Badge.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        value = _props.value,\n        max = _props.max,\n        isDot = _props.isDot;\n    var className = this.classNames({\n      'el-badge__content': true,\n      'is-fixed': !!children,\n      'is-dot': !!isDot\n    });\n    var content = void 0;\n\n    if (isDot) {\n      content = null;\n    } else {\n      if (typeof value === 'number' && typeof max === 'number') {\n        content = max < value ? max + '+' : value;\n      } else {\n        content = value;\n      }\n    }\n\n    return React.createElement('div', {\n      style: this.style(),\n      className: this.className('el-badge')\n    }, children, React.createElement('sup', {\n      className: className\n    }, content));\n  };\n\n  return Badge;\n}(Component);\n\nexport default Badge;\nBadge.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  max: PropTypes.number,\n  isDot: PropTypes.bool\n};\nBadge.defaultProps = {\n  isDot: false\n};","map":null,"metadata":{},"sourceType":"module"}