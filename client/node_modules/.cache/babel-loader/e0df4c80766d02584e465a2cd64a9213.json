{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Component, PropTypes } from '../../libs';\nimport Radio from './Radio';\n\nvar RadioButton = function (_Radio) {\n  _inherits(RadioButton, _Radio);\n\n  function RadioButton() {\n    _classCallCheck(this, RadioButton);\n\n    return _possibleConstructorReturn(this, _Radio.apply(this, arguments));\n  }\n\n  RadioButton.prototype.parent = function parent() {\n    return this.context.component;\n  };\n\n  RadioButton.prototype.size = function size() {\n    return this.parent().props.size;\n  };\n\n  RadioButton.prototype.isDisabled = function isDisabled() {\n    return this.props.disabled || this.parent().props.disabled;\n  };\n\n  RadioButton.prototype.activeStyle = function activeStyle() {\n    return {\n      backgroundColor: this.parent().props.fill || '',\n      borderColor: this.parent().props.fill || '',\n      color: this.parent().props.textColor || ''\n    };\n  };\n\n  RadioButton.prototype.render = function render() {\n    return React.createElement('label', {\n      style: this.style(),\n      className: this.className('el-radio-button', this.props.size && 'el-radio-button--' + this.size(), {\n        'is-active': this.state.checked\n      })\n    }, React.createElement('input', {\n      type: 'radio',\n      className: 'el-radio-button__orig-radio',\n      checked: this.state.checked,\n      disabled: this.isDisabled(),\n      onChange: this.onChange.bind(this)\n    }), React.createElement('span', {\n      className: 'el-radio-button__inner',\n      style: this.state.checked ? this.activeStyle() : {}\n    }, this.props.children || this.props.value));\n  };\n\n  return RadioButton;\n}(Radio);\n\nRadioButton.elementType = 'RadioButton';\nexport default RadioButton;\nRadioButton.contextTypes = {\n  component: PropTypes.any\n};\nRadioButton.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  name: PropTypes.string\n};","map":null,"metadata":{},"sourceType":"module"}