{"ast":null,"code":"import _classCallCheck from \"babel-runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"babel-runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"babel-runtime/helpers/inherits\";\nimport React from \"react\";\nimport { Component, PropTypes } from \"../../libs\";\n\nvar CheckboxGroup = function (_Component) {\n  _inherits(CheckboxGroup, _Component);\n\n  function CheckboxGroup(props) {\n    _classCallCheck(this, CheckboxGroup);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      options: _this.props.value || []\n    };\n    return _this;\n  }\n\n  CheckboxGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({\n        options: nextProps.value\n      });\n    }\n  };\n\n  CheckboxGroup.prototype.getChildContext = function getChildContext() {\n    return {\n      ElCheckboxGroup: this\n    };\n  };\n\n  CheckboxGroup.prototype.onChange = function onChange(value, checked) {\n    var index = this.state.options.indexOf(value);\n\n    if (checked) {\n      if (index === -1) {\n        this.state.options.push(value);\n      }\n    } else {\n      this.state.options.splice(index, 1);\n    }\n\n    this.forceUpdate();\n\n    if (this.props.onChange) {\n      this.props.onChange(this.state.options);\n    }\n  };\n\n  CheckboxGroup.prototype.render = function render() {\n    var _this2 = this;\n\n    var options = this.state.options;\n    var children = React.Children.map(this.props.children, function (child, index) {\n      if (!child) {\n        return null;\n      }\n\n      var elementType = child.type.elementType; // 过滤非Checkbox和CheckboxButton的子组件\n\n      if (elementType !== \"Checkbox\" && elementType !== \"CheckboxButton\") {\n        return null;\n      }\n\n      return React.cloneElement(child, Object.assign({}, child.props, {\n        key: index,\n        checked: child.props.checked || options.indexOf(child.props.value) >= 0 || options.indexOf(child.props.label) >= 0,\n        onChange: _this2.onChange.bind(_this2, child.props.value ? child.props.value : child.props.value === 0 ? 0 : child.props.label)\n      }));\n    });\n    return React.createElement(\"div\", {\n      style: this.style(),\n      className: this.className(\"el-checkbox-group\")\n    }, children);\n  };\n\n  return CheckboxGroup;\n}(Component);\n\nexport default CheckboxGroup;\nCheckboxGroup.childContextTypes = {\n  ElCheckboxGroup: PropTypes.any\n};\nCheckboxGroup.propTypes = {\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.string,\n  fill: PropTypes.string,\n  textColor: PropTypes.string,\n  value: PropTypes.any,\n  onChange: PropTypes.func\n};","map":null,"metadata":{},"sourceType":"module"}